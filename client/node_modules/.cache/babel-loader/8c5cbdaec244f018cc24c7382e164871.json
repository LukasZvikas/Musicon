{"ast":null,"code":"const TRACK_DATA = \"track_data\";\nexport const getStorageData = key => {\n  try {\n    const data = localStorage.getItem(key);\n    if (data) data.split(\"]\");\n\n    if (data && data.split(\"]\").length > 1) {\n      return JSON.parse(data);\n    }\n\n    return data;\n  } catch {\n    return null;\n  }\n};\nexport const setStorageData = (key, data) => {\n  try {\n    const stringifiedData = JSON.stringify(data);\n    localStorage.setItem(key, stringifiedData);\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\nexport const updateStorageData = (key, data) => {\n  try {\n    const storageData = getStorageData(key);\n    let stringifiedData;\n\n    if (storageData && storageData.length) {\n      storageData.push(data);\n      stringifiedData = JSON.stringify(storageData);\n      localStorage.setItem(key, stringifiedData);\n      return stringifiedData;\n    }\n\n    const arr = [];\n    arr.push(data);\n    stringifiedData = JSON.stringify(arr);\n    localStorage.setItem(key, stringifiedData);\n    return stringifiedData;\n  } catch (err) {\n    return err;\n  }\n};\nexport const removeStorageData = () => {\n  try {\n    localStorage.removeItem(TRACK_DATA);\n    return;\n  } catch {\n    return null;\n  }\n};","map":{"version":3,"sources":["/Users/lukas/Documents/GitHub/spotify-app/src/utilities/localStorage.tsx"],"names":["TRACK_DATA","getStorageData","key","data","localStorage","getItem","split","length","JSON","parse","setStorageData","stringifiedData","stringify","setItem","err","updateStorageData","storageData","push","arr","removeStorageData","removeItem"],"mappings":"AAAA,MAAMA,UAAU,GAAG,YAAnB;AAEA,OAAO,MAAMC,cAAc,GAAIC,GAAD,IAAiB;AAC7C,MAAI;AACF,UAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqBH,GAArB,CAAb;AACA,QAAIC,IAAJ,EAAUA,IAAI,CAACG,KAAL,CAAW,GAAX;;AACV,QAAIH,IAAI,IAAIA,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgBC,MAAhB,GAAyB,CAArC,EAAwC;AACtC,aAAOC,IAAI,CAACC,KAAL,CAAWN,IAAX,CAAP;AACD;;AACD,WAAOA,IAAP;AACD,GAPD,CAOE,MAAM;AACN,WAAO,IAAP;AACD;AACF,CAXM;AAaP,OAAO,MAAMO,cAAc,GAAG,CAACR,GAAD,EAAcC,IAAd,KAA4B;AACxD,MAAI;AACF,UAAMQ,eAAe,GAAGH,IAAI,CAACI,SAAL,CAAeT,IAAf,CAAxB;AAEAC,IAAAA,YAAY,CAACS,OAAb,CAAqBX,GAArB,EAA0BS,eAA1B;AAEA,WAAOR,IAAP;AACD,GAND,CAME,OAAOW,GAAP,EAAY;AACZ,WAAOA,GAAP;AACD;AACF,CAVM;AAYP,OAAO,MAAMC,iBAAiB,GAAG,CAACb,GAAD,EAAcC,IAAd,KAA+B;AAC9D,MAAI;AACF,UAAMa,WAAW,GAAGf,cAAc,CAACC,GAAD,CAAlC;AAEA,QAAIS,eAAJ;;AACA,QAAIK,WAAW,IAAIA,WAAW,CAACT,MAA/B,EAAuC;AACrCS,MAAAA,WAAW,CAACC,IAAZ,CAAiBd,IAAjB;AACAQ,MAAAA,eAAe,GAAGH,IAAI,CAACI,SAAL,CAAeI,WAAf,CAAlB;AACAZ,MAAAA,YAAY,CAACS,OAAb,CAAqBX,GAArB,EAA0BS,eAA1B;AACA,aAAOA,eAAP;AACD;;AAED,UAAMO,GAAG,GAAG,EAAZ;AACAA,IAAAA,GAAG,CAACD,IAAJ,CAASd,IAAT;AACAQ,IAAAA,eAAe,GAAGH,IAAI,CAACI,SAAL,CAAeM,GAAf,CAAlB;AACAd,IAAAA,YAAY,CAACS,OAAb,CAAqBX,GAArB,EAA0BS,eAA1B;AACA,WAAOA,eAAP;AACD,GAhBD,CAgBE,OAAOG,GAAP,EAAY;AACZ,WAAOA,GAAP;AACD;AACF,CApBM;AAsBP,OAAO,MAAMK,iBAAiB,GAAG,MAAM;AACrC,MAAI;AACFf,IAAAA,YAAY,CAACgB,UAAb,CAAwBpB,UAAxB;AACA;AACD,GAHD,CAGE,MAAM;AACN,WAAO,IAAP;AACD;AACF,CAPM","sourcesContent":["const TRACK_DATA = \"track_data\";\n\nexport const getStorageData = (key: string) => {\n  try {\n    const data = localStorage.getItem(key);\n    if (data) data.split(\"]\");\n    if (data && data.split(\"]\").length > 1) {\n      return JSON.parse(data);\n    }\n    return data;\n  } catch {\n    return null;\n  }\n};\n\nexport const setStorageData = (key: string, data: any) => {\n  try {\n    const stringifiedData = JSON.stringify(data);\n\n    localStorage.setItem(key, stringifiedData);\n\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const updateStorageData = (key: string, data: string) => {\n  try {\n    const storageData = getStorageData(key);\n\n    let stringifiedData;\n    if (storageData && storageData.length) {\n      storageData.push(data);\n      stringifiedData = JSON.stringify(storageData);\n      localStorage.setItem(key, stringifiedData);\n      return stringifiedData;\n    }\n\n    const arr = [];\n    arr.push(data);\n    stringifiedData = JSON.stringify(arr);\n    localStorage.setItem(key, stringifiedData);\n    return stringifiedData;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const removeStorageData = () => {\n  try {\n    localStorage.removeItem(TRACK_DATA);\n    return;\n  } catch {\n    return null;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}