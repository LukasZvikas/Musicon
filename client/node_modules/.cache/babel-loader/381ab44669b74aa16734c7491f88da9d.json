{"ast":null,"code":"import _slicedToArray from \"/Users/lukas/Documents/GitHub/spotify-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/lukas/Documents/GitHub/spotify-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/lukas/Documents/GitHub/spotify-app/src/pages/dashboard/index.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query TracksQuery {\\n    tracks {\\n      id\\n      name\\n      artists {\\n        name\\n      }\\n      preview_url\\n      album {\\n        images {\\n          url\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, Fragment } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { Card } from \"./card/Card\";\nimport { Button } from \"../../components/button\";\nimport \"../../Shared.css\";\nimport \"./Dashboard.css\";\nconst TRACKS_QUERY = gql(_templateObject());\n\nconst Dashboard = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentIndex = _useState2[0],\n        updateIndex = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        frontImageIndex = _useState4[0],\n        updateFrontImageIndex = _useState4[1];\n\n  const _useState5 = useState(1),\n        _useState6 = _slicedToArray(_useState5, 2),\n        backImageIndex = _useState6[0],\n        updateBackImageIndex = _useState6[1];\n\n  const nextSong = () => {\n    updateIndex(currentIndex + 1);\n    document.querySelector(\".dashboard__video\").load();\n  };\n\n  const previousSong = () => {\n    updateIndex(currentIndex - 1);\n    document.querySelector(\".dashboard__video\").load();\n  };\n\n  const determineUpdateAction = () => {\n    if (frontImageIndex % 2 === 0) {\n      updateFrontImageIndex(frontImageIndex + 2);\n    } else {\n      updateBackImageIndex(backImageIndex + 2);\n    }\n\n    console.log(\"FRONT\", frontImageIndex);\n    console.log(\"BACK\", backImageIndex);\n  };\n\n  const renderArtists = arr => {\n    return arr.map((artist, index) => {\n      console.log(\"ARTIST\", artist);\n      if (index === arr.length - 1) return artist.name;\n      return artist.name + \", \";\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"d-flex justify-content-center align-items-center h-100 flex-column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Query, {\n    query: TRACKS_QUERY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, ({\n    loading,\n    error,\n    data\n  }) => {\n    if (loading) return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"LOADING...\");\n    if (error) console.log(\"error\", error);else {\n      console.log(\"DATA\", data);\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Card, {\n        nextSong: () => nextSong(),\n        previousSong: () => previousSong(),\n        frontImage: data.tracks[frontImageIndex].album.images.url,\n        backImage: data.tracks[backImageIndex].album.images.url,\n        updateImage: () => determineUpdateAction(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"dashboard__heading-wrapper mb-2 mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"heading__primary m-1 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, data.tracks[currentIndex].name), React.createElement(\"div\", {\n        className: \"heading__secondary mt-2 text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, renderArtists(data.tracks[currentIndex].artists)), React.createElement(\"video\", {\n        className: \"dashboard__video\",\n        controls: true,\n        name: \"media\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"source\", {\n        src: \"\".concat(data.tracks[currentIndex].preview_url),\n        type: \"audio/mpeg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        type: \"primary\",\n        title: \"Add to playlist\",\n        action: () => {},\n        fill: \"rgb(255, 78, 80)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }));\n    }\n  }));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/lukas/Documents/GitHub/spotify-app/src/pages/dashboard/index.js"],"names":["React","useState","Fragment","gql","Query","Card","Button","TRACKS_QUERY","Dashboard","currentIndex","updateIndex","frontImageIndex","updateFrontImageIndex","backImageIndex","updateBackImageIndex","nextSong","document","querySelector","load","previousSong","determineUpdateAction","console","log","renderArtists","arr","map","artist","index","length","name","loading","error","data","tracks","album","images","url","artists","preview_url"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { Card } from \"./card/Card\";\nimport { Button } from \"../../components/button\";\nimport \"../../Shared.css\";\nimport \"./Dashboard.css\";\n\nconst TRACKS_QUERY = gql`\n  query TracksQuery {\n    tracks {\n      id\n      name\n      artists {\n        name\n      }\n      preview_url\n      album {\n        images {\n          url\n        }\n      }\n    }\n  }\n`;\n\nconst Dashboard = () => {\n  const [currentIndex, updateIndex] = useState(0);\n  const [frontImageIndex, updateFrontImageIndex] = useState(0);\n  const [backImageIndex, updateBackImageIndex] = useState(1);\n\n  const nextSong = () => {\n    updateIndex(currentIndex + 1);\n    document.querySelector(\".dashboard__video\").load();\n  };\n\n  const previousSong = () => {\n    updateIndex(currentIndex - 1);\n    document.querySelector(\".dashboard__video\").load();\n  };\n\n  const determineUpdateAction = () => {\n    if (frontImageIndex % 2 === 0) {\n      updateFrontImageIndex(frontImageIndex + 2);\n    } else {\n      updateBackImageIndex(backImageIndex + 2);\n    }\n\n    console.log(\"FRONT\", frontImageIndex);\n    console.log(\"BACK\", backImageIndex);\n  };\n\n  const renderArtists = arr => {\n    return arr.map((artist, index) => {\n      console.log(\"ARTIST\", artist);\n      if (index === arr.length - 1) return artist.name;\n      return artist.name + \", \";\n    });\n  };\n\n  return (\n    <div className=\"d-flex justify-content-center align-items-center h-100 flex-column\">\n      <Query query={TRACKS_QUERY}>\n        {({ loading, error, data }) => {\n          if (loading) return <h4>LOADING...</h4>;\n          if (error) console.log(\"error\", error);\n          else {\n            console.log(\"DATA\", data);\n            return (\n              <Fragment>\n                <Card\n                  nextSong={() => nextSong()}\n                  previousSong={() => previousSong()}\n                  frontImage={data.tracks[frontImageIndex].album.images.url}\n                  backImage={data.tracks[backImageIndex].album.images.url}\n                  updateImage={() => determineUpdateAction()}\n                />\n                <div className=\"dashboard__heading-wrapper mb-2 mt-2\">\n                  <div className=\"heading__primary m-1 text-center\">\n                    {data.tracks[currentIndex].name}\n                  </div>\n                  <div className=\"heading__secondary mt-2 text-white\">\n                    {renderArtists(data.tracks[currentIndex].artists)}\n                  </div>\n                  <video className=\"dashboard__video\" controls name=\"media\">\n                    <source\n                      src={`${data.tracks[currentIndex].preview_url}`}\n                      type=\"audio/mpeg\"\n                    />\n                  </video>\n                </div>\n\n                <Button\n                  type={\"primary\"}\n                  title={\"Add to playlist\"}\n                  action={() => {}}\n                  fill={\"rgb(255, 78, 80)\"}\n                />\n              </Fragment>\n            );\n          }\n        }}\n      </Query>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}