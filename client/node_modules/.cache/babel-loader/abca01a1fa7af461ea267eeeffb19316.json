{"ast":null,"code":"import _slicedToArray from \"/Users/lukas/Documents/GitHub/spotify-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lukas/Documents/GitHub/spotify-app/src/pages/quiz/index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { quizData } from \"./quizData\";\nimport { Button } from \"../../components/button\";\nimport { SpotifyIcon } from \"../../svg/spotifyIcon\";\nimport { SuccessMessage } from \"../../components/successMessage\";\nimport \"./Quiz.css\";\nimport \"../../Shared.css\";\n\nconst Quiz = () => {\n  const _useState = useState(Array()),\n        _useState2 = _slicedToArray(_useState, 2),\n        genreState = _useState2[0],\n        changeGenreState = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isLoginSuccess = _useState4[0],\n        changeLoginSuccess = _useState4[1];\n\n  const authorizeUser = async () => {\n    window.location.href = \"https://accounts.spotify.com/en/authorize?client_id=b1e047dc11e749cfb928e1d33b784a2b&response_type=token&redirect_uri=http:%2F%2Flocalhost:3000%2F&scope=playlist-modify-public\";\n  };\n\n  useEffect(() => {\n    const token = getHash();\n    if (token) localStorage.setItem(\"token\", token);\n    return;\n  });\n\n  const getHash = () => {\n    const hash = window.location.hash.substring(1).split(\"&\").reduce(function (initial, item) {\n      if (item) {\n        var parts = item.split(\"=\");\n        initial[parts[0]] = decodeURIComponent(parts[1]);\n      }\n\n      return initial;\n    }, {});\n    window.location.hash = \"\";\n    let _token = hash.access_token;\n    changeLoginSuccess(true);\n    setTimeout(function () {\n      changeLoginSuccess(false);\n    }, 2000);\n    return _token;\n  };\n\n  const onGenreClick = name => {\n    const newState = genreState;\n    newState.push(name);\n    changeGenreState([...newState]);\n  };\n\n  const renderGenres = genres => {\n    return genres.map((item, index) => React.createElement(\"div\", {\n      className: \"col-5 col-sm-3 col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Button, {\n      key: index,\n      type: \"quiz-empty\",\n      title: item.genre,\n      action: () => onGenreClick(item.genre),\n      colors: genreState.includes(item.genre) ? {\n        backgroundColor: \"rgb(255, 78, 80)\",\n        color: \"#fff\"\n      } : {\n        backgroundColor: \"#fff\",\n        color: \"rgb(255, 78, 80)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"quiz h-100 d-flex align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, isLoginSuccess ? React.createElement(SuccessMessage, {\n    message: \"You have logged in successfully!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }) : null, React.createElement(\"div\", {\n    className: \"heading__primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Before We Start!\"), React.createElement(\"div\", {\n    className: \"d-flex justify-content-around align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"text-white\",\n    style: {\n      fontSize: \"28px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"1.\"), React.createElement(Button, {\n    type: \"primary\",\n    title: \"Login with Spotify\",\n    action: () => {\n      authorizeUser();\n    },\n    colors: {\n      backgroundColor: \"#000\",\n      color: \"#fff\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(SpotifyIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"heading__secondary d-flex mb-4 mt-2 mx-3 text-center text-white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"text-white mr-2\",\n    style: {\n      fontSize: \"28px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"2.\"), \"Please choose up to three of your favorite music genres.\", \" \"), React.createElement(\"div\", {\n    className: \"quiz__genres row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, renderGenres(quizData)), React.createElement(Link, {\n    to: {\n      pathname: \"/dashboard\",\n      state: genreState\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    title: \"I'm ready!\",\n    action: () => {},\n    colors: {\n      backgroundColor: \"rgb(255, 78, 80)\",\n      color: \"#fff\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })));\n};\n\nexport default Quiz;","map":{"version":3,"sources":["/Users/lukas/Documents/GitHub/spotify-app/src/pages/quiz/index.tsx"],"names":["React","useState","useEffect","Link","quizData","Button","SpotifyIcon","SuccessMessage","Quiz","Array","genreState","changeGenreState","isLoginSuccess","changeLoginSuccess","authorizeUser","window","location","href","token","getHash","localStorage","setItem","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","_token","access_token","setTimeout","onGenreClick","name","newState","push","renderGenres","genres","map","index","genre","includes","backgroundColor","color","fontSize","pathname","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,cAAT,QAA+B,iCAA/B;AACA,OAAO,YAAP;AACA,OAAO,kBAAP;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA,oBACsBP,QAAQ,CAACQ,KAAK,EAAN,CAD9B;AAAA;AAAA,QACVC,UADU;AAAA,QACEC,gBADF;;AAAA,qBAE4BV,QAAQ,CAAC,KAAD,CAFpC;AAAA;AAAA,QAEVW,cAFU;AAAA,QAEMC,kBAFN;;AAIjB,QAAMC,aAAa,GAAG,YAAY;AAChCC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GACE,iLADF;AAED,GAHD;;AAKAf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,KAAK,GAAGC,OAAO,EAArB;AACA,QAAID,KAAJ,EAAWE,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AACX;AACD,GAJQ,CAAT;;AAMA,QAAMC,OAAO,GAAG,MAAM;AACpB,UAAMG,IAAI,GAAGP,MAAM,CAACC,QAAP,CAAgBM,IAAhB,CACVC,SADU,CACA,CADA,EAEVC,KAFU,CAEJ,GAFI,EAGVC,MAHU,CAGH,UAASC,OAAT,EAAuBC,IAAvB,EAA6B;AACnC,UAAIA,IAAJ,EAAU;AACR,YAAIC,KAAK,GAAGD,IAAI,CAACH,KAAL,CAAW,GAAX,CAAZ;AACAE,QAAAA,OAAO,CAACE,KAAK,CAAC,CAAD,CAAN,CAAP,GAAoBC,kBAAkB,CAACD,KAAK,CAAC,CAAD,CAAN,CAAtC;AACD;;AACD,aAAOF,OAAP;AACD,KATU,EASR,EATQ,CAAb;AAWAX,IAAAA,MAAM,CAACC,QAAP,CAAgBM,IAAhB,GAAuB,EAAvB;AAEA,QAAIQ,MAAM,GAAGR,IAAI,CAACS,YAAlB;AACAlB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAmB,IAAAA,UAAU,CAAC,YAAW;AACpBnB,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,KAFS,EAEP,IAFO,CAAV;AAIA,WAAOiB,MAAP;AACD,GArBD;;AAuBA,QAAMG,YAAY,GAAIC,IAAD,IAAkB;AACrC,UAAMC,QAAQ,GAAGzB,UAAjB;AACAyB,IAAAA,QAAQ,CAACC,IAAT,CAAcF,IAAd;AACAvB,IAAAA,gBAAgB,CAAC,CAAC,GAAGwB,QAAJ,CAAD,CAAhB;AACD,GAJD;;AAMA,QAAME,YAAY,GAAIC,MAAD,IAAiC;AACpD,WAAOA,MAAM,CAACC,GAAP,CAAW,CAACZ,IAAD,EAAOa,KAAP,KAChB;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,IAAI,EAAE,YAFR;AAGE,MAAA,KAAK,EAAEb,IAAI,CAACc,KAHd;AAIE,MAAA,MAAM,EAAE,MAAMR,YAAY,CAACN,IAAI,CAACc,KAAN,CAJ5B;AAKE,MAAA,MAAM,EACJ/B,UAAU,CAACgC,QAAX,CAAoBf,IAAI,CAACc,KAAzB,IACI;AAAEE,QAAAA,eAAe,EAAE,kBAAnB;AAAuCC,QAAAA,KAAK,EAAE;AAA9C,OADJ,GAEI;AAAED,QAAAA,eAAe,EAAE,MAAnB;AAA2BC,QAAAA,KAAK,EAAE;AAAlC,OARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADK,CAAP;AAeD,GAhBD;;AAkBA,SACE;AAAK,IAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhC,cAAc,GACb,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAE,kCAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADa,GAEX,IAHN,EAIE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,EAKE;AAAK,IAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,KAAK,EAAE;AAAEiC,MAAAA,QAAQ,EAAE;AAAZ,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAIE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAE,SADR;AAEE,IAAA,KAAK,EAAE,oBAFT;AAGE,IAAA,MAAM,EAAE,MAAM;AACZ/B,MAAAA,aAAa;AACd,KALH;AAME,IAAA,MAAM,EAAE;AAAE6B,MAAAA,eAAe,EAAE,MAAnB;AAA2BC,MAAAA,KAAK,EAAE;AAAlC,KANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAJF,CALF,EAoBE;AAAK,IAAA,SAAS,EAAC,iEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,8DAI2D,GAJ3D,CApBF,EA0BE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCR,YAAY,CAACjC,QAAD,CAA/C,CA1BF,EA2BE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAE0C,MAAAA,QAAQ,EAAE,YAAZ;AAA0BC,MAAAA,KAAK,EAAErC;AAAjC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAE,SADR;AAEE,IAAA,KAAK,EAAE,YAFT;AAGE,IAAA,MAAM,EAAE,MAAM,CAAE,CAHlB;AAIE,IAAA,MAAM,EAAE;AAAEiC,MAAAA,eAAe,EAAE,kBAAnB;AAAuCC,MAAAA,KAAK,EAAE;AAA9C,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA3BF,CADF;AAsCD,CApGD;;AAsGA,eAAepC,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { quizData } from \"./quizData\";\nimport { Button } from \"../../components/button\";\nimport { SpotifyIcon } from \"../../svg/spotifyIcon\";\nimport { SuccessMessage } from \"../../components/successMessage\";\nimport \"./Quiz.css\";\nimport \"../../Shared.css\";\n\nconst Quiz = () => {\n  const [genreState, changeGenreState] = useState(Array());\n  const [isLoginSuccess, changeLoginSuccess] = useState(false);\n\n  const authorizeUser = async () => {\n    window.location.href =\n      \"https://accounts.spotify.com/en/authorize?client_id=b1e047dc11e749cfb928e1d33b784a2b&response_type=token&redirect_uri=http:%2F%2Flocalhost:3000%2F&scope=playlist-modify-public\";\n  };\n\n  useEffect(() => {\n    const token = getHash();\n    if (token) localStorage.setItem(\"token\", token);\n    return;\n  });\n\n  const getHash = () => {\n    const hash = window.location.hash\n      .substring(1)\n      .split(\"&\")\n      .reduce(function(initial: any, item) {\n        if (item) {\n          var parts = item.split(\"=\");\n          initial[parts[0]] = decodeURIComponent(parts[1]);\n        }\n        return initial;\n      }, {});\n\n    window.location.hash = \"\";\n\n    let _token = hash.access_token;\n    changeLoginSuccess(true);\n    setTimeout(function() {\n      changeLoginSuccess(false);\n    }, 2000);\n\n    return _token;\n  };\n\n  const onGenreClick = (name: string) => {\n    const newState = genreState;\n    newState.push(name);\n    changeGenreState([...newState]);\n  };\n\n  const renderGenres = (genres: { genre: string }[]) => {\n    return genres.map((item, index: number) => (\n      <div className=\"col-5 col-sm-3 col-md-2\">\n        <Button\n          key={index}\n          type={\"quiz-empty\"}\n          title={item.genre}\n          action={() => onGenreClick(item.genre)}\n          colors={\n            genreState.includes(item.genre)\n              ? { backgroundColor: \"rgb(255, 78, 80)\", color: \"#fff\" }\n              : { backgroundColor: \"#fff\", color: \"rgb(255, 78, 80)\" }\n          }\n        />\n      </div>\n    ));\n  };\n\n  return (\n    <div className=\"quiz h-100 d-flex align-items-center\">\n      {isLoginSuccess ? (\n        <SuccessMessage message={\"You have logged in successfully!\"} />\n      ) : null}\n      <div className=\"heading__primary\">Before We Start!</div>\n      <div className=\"d-flex justify-content-around align-items-center\">\n        <div className=\"text-white\" style={{ fontSize: \"28px\" }}>\n          1.\n        </div>\n        <Button\n          type={\"primary\"}\n          title={\"Login with Spotify\"}\n          action={() => {\n            authorizeUser();\n          }}\n          colors={{ backgroundColor: \"#000\", color: \"#fff\" }}\n        >\n          <SpotifyIcon />\n        </Button>\n      </div>\n      <div className=\"heading__secondary d-flex mb-4 mt-2 mx-3 text-center text-white\">\n        <div className=\"text-white mr-2\" style={{ fontSize: \"28px\" }}>\n          2.\n        </div>\n        Please choose up to three of your favorite music genres.{\" \"}\n      </div>\n      <div className=\"quiz__genres row\">{renderGenres(quizData)}</div>\n      <Link to={{ pathname: \"/dashboard\", state: genreState }}>\n        <Button\n          type={\"primary\"}\n          title={\"I'm ready!\"}\n          action={() => {}}\n          colors={{ backgroundColor: \"rgb(255, 78, 80)\", color: \"#fff\" }}\n        />\n      </Link>\n    </div>\n  );\n};\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}