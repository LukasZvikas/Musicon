{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/lukas/Documents/GitHub/spotify-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/lukas/Documents/GitHub/spotify-app/src/App.tsx\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n          {\\n            userDetails {\\n              display_name\\n            }\\n          }\\n        \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query UserDetails {\\n    userDetails {\\n      display_name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport Quiz from \"./pages/quiz\";\nimport Dashboard from \"./pages/dashboard/index.js\";\nimport SavedSongs from \"./pages/savedSongs\";\nimport { getStorageData } from \"./utilities/localStorage\";\nimport gql from \"graphql-tag\";\nimport \"./App.css\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:5000/graphql\",\n  headers: {\n    token: getStorageData(\"token\")\n  }\n});\nconst USER_DETAILS_QUERY = gql(_templateObject());\n\nconst App = ({}) => {\n  const queryUser = () => {\n    client.query({\n      query: gql(_templateObject2())\n    }).then(response => console.log(\"RES\", response.data));\n  };\n\n  return React.createElement(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, queryUser(), React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: Quiz,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/dashboard\",\n    component: Dashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/saved\",\n    component: SavedSongs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/lukas/Documents/GitHub/spotify-app/src/App.tsx"],"names":["React","BrowserRouter","Route","Switch","ApolloClient","ApolloProvider","Quiz","Dashboard","SavedSongs","getStorageData","gql","client","uri","headers","token","USER_DETAILS_QUERY","App","queryUser","query","then","response","console","log","data"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAAsC,cAAtC;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAO,WAAP;AAEA,MAAMC,MAAM,GAAG,IAAIP,YAAJ,CAAiB;AAC9BQ,EAAAA,GAAG,EAAE,+BADyB;AAE9BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAEL,cAAc,CAAC,OAAD;AADd;AAFqB,CAAjB,CAAf;AAOA,MAAMM,kBAAkB,GAAGL,GAAH,mBAAxB;;AAQA,MAAMM,GAAG,GAAG,CAAC,EAAD,KAAQ;AAClB,QAAMC,SAAS,GAAG,MAAM;AACtBN,IAAAA,MAAM,CACHO,KADH,CACS;AACLA,MAAAA,KAAK,EAAER,GAAF;AADA,KADT,EAUGS,IAVH,CAUQC,QAAQ,IAAIC,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,QAAQ,CAACG,IAA5B,CAVpB;AAWD,GAZD;;AAcA,SACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEZ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAiBGM,SAAS,EAjBZ,EAkBE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,MAArB;AAAsB,IAAA,SAAS,EAAEX,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,YAAZ;AAAyB,IAAA,SAAS,EAAEC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAEC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CAlBF,CADF;AA6BD,CA5CD;;AA8CA,eAAeQ,GAAf","sourcesContent":["import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, Query } from \"react-apollo\";\nimport Header from \"./components/header\";\nimport Quiz from \"./pages/quiz\";\nimport Dashboard from \"./pages/dashboard/index.js\";\nimport SavedSongs from \"./pages/savedSongs\";\nimport { getStorageData } from \"./utilities/localStorage\";\nimport gql from \"graphql-tag\";\nimport \"./App.css\";\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:5000/graphql\",\n  headers: {\n    token: getStorageData(\"token\")\n  }\n});\n\nconst USER_DETAILS_QUERY = gql`\n  query UserDetails {\n    userDetails {\n      display_name\n    }\n  }\n`;\n\nconst App = ({}) => {\n  const queryUser = () => {\n    client\n      .query({\n        query: gql`\n          {\n            userDetails {\n              display_name\n            }\n          }\n        `\n      })\n      .then(response => console.log(\"RES\", response.data));\n  };\n\n  return (\n    <ApolloProvider client={client}>\n      {/* <Query query={USER_DETAILS_QUERY}>\n        {(props: any) => {\n          if (props.loading) return <div>Loading...</div>;\n          if (props.error) console.log(\"error\", props.error);\n          else {\n            console.log(\"THE DATA\", props.data.userDetails.display_name);\n            return (\n              <div className=\"d-flex justify-content-center m-5\">\n                <select className=\"select-input\">\n                  <option>{props.data.userDetails.display_name}</option>\n                </select>\n              </div>\n            );\n          }\n        }}\n      </Query> */}\n      {queryUser()}\n      <BrowserRouter>\n        <Switch>\n          {/* <Header /> */}\n          <Route path=\"/\" exact component={Quiz} />\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/saved\" component={SavedSongs} />\n        </Switch>\n      </BrowserRouter>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}