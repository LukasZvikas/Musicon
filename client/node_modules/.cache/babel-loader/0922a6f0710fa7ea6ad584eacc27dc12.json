{"ast":null,"code":"import _slicedToArray from \"/Users/lukas/Documents/GitHub/spotify-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lukas/Documents/GitHub/spotify-app/src/components/quiz/index.tsx\";\nimport React, { useState } from \"react\";\nimport { quizData } from \"./quizData\";\nimport { Button } from \"../button/\";\nimport \"./Quiz.css\";\nimport \"../../Shared.css\";\n\nconst Quiz = () => {\n  const createStateStore = arr => {\n    const store = [];\n\n    for (let i = 0; i < arr.length; i++) {\n      store[arr[i].genre] = false;\n    }\n\n    return store;\n  };\n\n  const quizState = createStateStore(quizData);\n\n  const _useState = useState(quizState),\n        _useState2 = _slicedToArray(_useState, 2),\n        genreState = _useState2[0],\n        changeGenreState = _useState2[1];\n\n  const onGenreClick = name => {\n    const newState = genreState;\n    newState[name] = !newState[name];\n    changeGenreState(newState);\n  };\n\n  const renderGenres = genres => {\n    return genres.map((item, index) => {\n      return React.createElement(Button, {\n        key: index,\n        type: \"quiz-empty\",\n        title: item.genre,\n        action: onGenreClick,\n        fill: genreState[item.genre] ? \"rgb(255, 78, 80)\" : \"#fff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      });\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"quiz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"heading__primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Before We Start!\"), React.createElement(\"div\", {\n    className: \"heading__secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Please choose up to three of your favorite genres.\", \" \"), React.createElement(\"div\", {\n    className: \"quiz__genres\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, renderGenres(quizData)), React.createElement(Button, {\n    type: \"primary\",\n    title: \"I'm ready!\",\n    action: () => onGenreClick(\"Rap\"),\n    fill: \"rgb(255, 78, 80)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }));\n};\n\nexport default Quiz;","map":{"version":3,"sources":["/Users/lukas/Documents/GitHub/spotify-app/src/components/quiz/index.tsx"],"names":["React","useState","quizData","Button","Quiz","createStateStore","arr","store","i","length","genre","quizState","genreState","changeGenreState","onGenreClick","name","newState","renderGenres","genres","map","item","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAO,YAAP;AACA,OAAO,kBAAP;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,gBAAgB,GAAIC,GAAD,IAAc;AACrC,UAAMC,KAAU,GAAG,EAAnB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnCD,MAAAA,KAAK,CAACD,GAAG,CAACE,CAAD,CAAH,CAAOE,KAAR,CAAL,GAAsB,KAAtB;AACD;;AACD,WAAOH,KAAP;AACD,GAPD;;AASA,QAAMI,SAAS,GAAGN,gBAAgB,CAACH,QAAD,CAAlC;;AAViB,oBAYsBD,QAAQ,CAACU,SAAD,CAZ9B;AAAA;AAAA,QAYVC,UAZU;AAAA,QAYEC,gBAZF;;AAcjB,QAAMC,YAAY,GAAIC,IAAD,IAAkB;AACrC,UAAMC,QAAa,GAAGJ,UAAtB;AACAI,IAAAA,QAAQ,CAACD,IAAD,CAAR,GAAiB,CAACC,QAAQ,CAACD,IAAD,CAA1B;AACAF,IAAAA,gBAAgB,CAACG,QAAD,CAAhB;AACD,GAJD;;AAMA,QAAMC,YAAY,GAAIC,MAAD,IAAiC;AACpD,WAAOA,MAAM,CAACC,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,KAAyB;AACzC,aACE,oBAAC,MAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,IAAI,EAAE,YAFR;AAGE,QAAA,KAAK,EAAED,IAAI,CAACV,KAHd;AAIE,QAAA,MAAM,EAAEI,YAJV;AAKE,QAAA,IAAI,EAAEF,UAAU,CAACQ,IAAI,CAACV,KAAN,CAAV,GAAyB,kBAAzB,GAA8C,MALtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD,KAVM,CAAP;AAWD,GAZD;;AAgBA,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DACqD,GADrD,CAFF,EAKE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BO,YAAY,CAACf,QAAD,CAA3C,CALF,EAME,oBAAC,MAAD;AACE,IAAA,IAAI,EAAE,SADR;AAEE,IAAA,KAAK,EAAE,YAFT;AAGE,IAAA,MAAM,EAAE,MAAMY,YAAY,CAAC,KAAD,CAH5B;AAIE,IAAA,IAAI,EAAE,kBAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAeD,CAnDD;;AAqDA,eAAeV,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { quizData } from \"./quizData\";\nimport { Button } from \"../button/\";\nimport \"./Quiz.css\";\nimport \"../../Shared.css\";\n\nconst Quiz = () => {\n  const createStateStore = (arr: any) => {\n    const store: any = [];\n\n    for (let i = 0; i < arr.length; i++) {\n      store[arr[i].genre] = false;\n    }\n    return store;\n  };\n\n  const quizState = createStateStore(quizData);\n\n  const [genreState, changeGenreState] = useState(quizState);\n\n  const onGenreClick = (name: string) => {\n    const newState: any = genreState;\n    newState[name] = !newState[name];\n    changeGenreState(newState);\n  };\n\n  const renderGenres = (genres: { genre: string }[]) => {\n    return genres.map((item, index: number) => {\n      return (\n        <Button\n          key={index}\n          type={\"quiz-empty\"}\n          title={item.genre}\n          action={onGenreClick}\n          fill={genreState[item.genre] ? \"rgb(255, 78, 80)\" : \"#fff\"}\n        />\n      );\n    });\n  };\n\n \n\n  return (\n    <div className=\"quiz\">\n      <div className=\"heading__primary\">Before We Start!</div>\n      <div className=\"heading__secondary\">\n        Please choose up to three of your favorite genres.{\" \"}\n      </div>\n      <div className=\"quiz__genres\">{renderGenres(quizData)}</div>\n      <Button\n        type={\"primary\"}\n        title={\"I'm ready!\"}\n        action={() => onGenreClick(\"Rap\")}\n        fill={\"rgb(255, 78, 80)\"}\n      />\n    </div>\n  );\n};\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}