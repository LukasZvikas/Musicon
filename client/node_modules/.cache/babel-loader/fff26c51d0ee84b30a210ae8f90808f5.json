{"ast":null,"code":"import _slicedToArray from \"/Users/lukas/Documents/GitHub/spotify-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lukas/Documents/GitHub/spotify-app/src/pages/quiz/index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { quizData } from \"./quizData\";\nimport { Button } from \"../../components/button\";\nimport { SpotifyIcon } from \"../../svg/spotifyIcon\";\nimport { Alert } from \"../../components/alert\";\nimport { updateStorageData } from \"../../utilities/localStorage\";\nimport \"./Quiz.css\";\nimport \"../../Shared.css\";\n\nconst Quiz = props => {\n  const _useState = useState(Array()),\n        _useState2 = _slicedToArray(_useState, 2),\n        genreState = _useState2[0],\n        changeGenreState = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isLoginSuccess = _useState4[0],\n        changeLoginSuccess = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isLoginError = _useState6[0],\n        setIsLoginError = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isGenresError = _useState8[0],\n        setIsGenresError = _useState8[1];\n\n  const authorizeUser = async () => {\n    window.location.href = \"https://accounts.spotify.com/en/authorize?client_id=b1e047dc11e749cfb928e1d33b784a2b&response_type=token&redirect_uri=http:%2F%2Flocalhost:3000%2F&scope=playlist-modify-public\";\n  };\n\n  useEffect(() => {\n    if (props.location.state && props.location.state.authError) {\n      setIsLoginError(true);\n      props.history.replace({\n        pathname: \"/\",\n        state: {\n          authError: false\n        }\n      });\n      setTimeout(function () {\n        setIsLoginError(false);\n      }, 2000);\n      return;\n    }\n\n    const token = getHash();\n    if (token) localStorage.setItem(\"token\", token);\n    return;\n  });\n\n  const getHash = () => {\n    const hash = window.location.hash.substring(1).split(\"&\").reduce(function (initial, item) {\n      if (item) {\n        var parts = item.split(\"=\");\n        initial[parts[0]] = decodeURIComponent(parts[1]);\n      }\n\n      return initial;\n    }, {});\n    window.location.hash = \"\";\n    let _token = hash.access_token;\n\n    if (_token) {\n      changeLoginSuccess(true);\n      setTimeout(function () {\n        changeLoginSuccess(false);\n      }, 2000);\n    }\n\n    return _token;\n  };\n\n  const onGenreClick = name => {\n    const newState = genreState;\n    newState.push(name);\n    changeGenreState([...newState]);\n    updateStorageData(\"selected_genres\", name);\n  };\n\n  const removeGenresError = () => {\n    setIsGenresError(true);\n    setTimeout(function () {\n      setIsGenresError(false);\n    }, 1000);\n  };\n\n  const renderGenres = genres => {\n    return genres.map((item, index) => React.createElement(\"div\", {\n      className: \"col-6 col-sm-5 col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Button, {\n      key: index,\n      type: \"quiz-empty\",\n      title: item.genre,\n      action: () => onGenreClick(item.genre),\n      colors: genreState.includes(item.genre) ? {\n        backgroundColor: \"rgb(255, 78, 80)\",\n        color: \"#fff\"\n      } : {\n        backgroundColor: \"#fff\",\n        color: \"rgb(255, 78, 80)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"quiz h-100 d-flex align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, isLoginSuccess ? React.createElement(Alert, {\n    message: \"You have logged in successfully!\",\n    isSuccess: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }) : null, isLoginError ? React.createElement(Alert, {\n    message: \"Please login first!\",\n    isSuccess: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }) : null, isGenresError ? React.createElement(Alert, {\n    message: \"Please choose at least one genre first!\",\n    isSuccess: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }) : null, React.createElement(\"div\", {\n    className: \"heading__primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Before We Start!\"), React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"text-white\",\n    style: {\n      fontSize: \"28px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"1.\"), React.createElement(Button, {\n    type: \"primary\",\n    title: \"Login with Spotify\",\n    action: () => {\n      authorizeUser();\n    },\n    colors: {\n      backgroundColor: \"#000\",\n      color: \"#fff\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(SpotifyIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"heading__secondary d-flex mb-4 mt-2 mx-3 text-center text-white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"text-white mr-2\",\n    style: {\n      fontSize: \"28px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"2.\"), \"Please choose up to three of your favorite music genres.\", \" \"), React.createElement(\"div\", {\n    className: \"quiz__genres row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, renderGenres(quizData)), React.createElement(\"div\", {\n    onClick: () => {\n      !genreState.length && removeGenresError();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/explore\",\n    className: isGenresError ? \"\" : \"disable-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    title: \"I'm ready!\",\n    colors: {\n      backgroundColor: \"rgb(255, 78, 80)\",\n      color: \"#fff\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }))));\n};\n\nexport default Quiz;","map":{"version":3,"sources":["/Users/lukas/Documents/GitHub/spotify-app/src/pages/quiz/index.tsx"],"names":["React","useState","useEffect","Link","quizData","Button","SpotifyIcon","Alert","updateStorageData","Quiz","props","Array","genreState","changeGenreState","isLoginSuccess","changeLoginSuccess","isLoginError","setIsLoginError","isGenresError","setIsGenresError","authorizeUser","window","location","href","state","authError","history","replace","pathname","setTimeout","token","getHash","localStorage","setItem","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","_token","access_token","onGenreClick","name","newState","push","removeGenresError","renderGenres","genres","map","index","genre","includes","backgroundColor","color","fontSize","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { quizData } from \"./quizData\";\nimport { Button } from \"../../components/button\";\nimport { SpotifyIcon } from \"../../svg/spotifyIcon\";\nimport { Alert } from \"../../components/alert\";\nimport { updateStorageData } from \"../../utilities/localStorage\";\nimport \"./Quiz.css\";\nimport \"../../Shared.css\";\n\nconst Quiz = (props: any) => {\n  const [genreState, changeGenreState] = useState(Array());\n  const [isLoginSuccess, changeLoginSuccess] = useState(false);\n  const [isLoginError, setIsLoginError] = useState(false);\n  const [isGenresError, setIsGenresError] = useState(false);\n\n  const authorizeUser = async () => {\n    window.location.href =\n      \"https://accounts.spotify.com/en/authorize?client_id=b1e047dc11e749cfb928e1d33b784a2b&response_type=token&redirect_uri=http:%2F%2Flocalhost:3000%2F&scope=playlist-modify-public\";\n  };\n\n  useEffect(() => {\n    if (props.location.state && props.location.state.authError) {\n      setIsLoginError(true);\n      props.history.replace({ pathname: \"/\", state: { authError: false } });\n      setTimeout(function() {\n        setIsLoginError(false);\n      }, 2000);\n      return;\n    }\n    const token = getHash();\n    if (token) localStorage.setItem(\"token\", token);\n    return;\n  });\n\n  const getHash = () => {\n    const hash = window.location.hash\n      .substring(1)\n      .split(\"&\")\n      .reduce(function(initial: any, item) {\n        if (item) {\n          var parts = item.split(\"=\");\n          initial[parts[0]] = decodeURIComponent(parts[1]);\n        }\n        return initial;\n      }, {});\n\n    window.location.hash = \"\";\n\n    let _token = hash.access_token;\n    if (_token) {\n      changeLoginSuccess(true);\n      setTimeout(function() {\n        changeLoginSuccess(false);\n      }, 2000);\n    }\n\n    return _token;\n  };\n\n  const onGenreClick = (name: string) => {\n    const newState = genreState;\n    newState.push(name);\n    changeGenreState([...newState]);\n    updateStorageData(\"selected_genres\", name);\n  };\n\n  const removeGenresError = () => {\n    setIsGenresError(true);\n    setTimeout(function() {\n      setIsGenresError(false);\n    }, 1000);\n  };\n\n  const renderGenres = (genres: { genre: string }[]) => {\n    return genres.map((item, index: number) => (\n      <div className=\"col-6 col-sm-5 col-md-2\">\n        <Button\n          key={index}\n          type={\"quiz-empty\"}\n          title={item.genre}\n          action={() => onGenreClick(item.genre)}\n          colors={\n            genreState.includes(item.genre)\n              ? { backgroundColor: \"rgb(255, 78, 80)\", color: \"#fff\" }\n              : { backgroundColor: \"#fff\", color: \"rgb(255, 78, 80)\" }\n          }\n        />\n      </div>\n    ));\n  };\n\n  return (\n    <div className=\"quiz h-100 d-flex align-items-center\">\n      {isLoginSuccess ? (\n        <Alert message={\"You have logged in successfully!\"} isSuccess={true} />\n      ) : null}\n      {isLoginError ? (\n        <Alert message={\"Please login first!\"} isSuccess={false} />\n      ) : null}\n      {isGenresError ? (\n        <Alert\n          message={\"Please choose at least one genre first!\"}\n          isSuccess={false}\n        />\n      ) : null}\n      <div className=\"heading__primary\">Before We Start!</div>\n      <div className=\"d-flex align-items-center\">\n        <div className=\"text-white\" style={{ fontSize: \"28px\" }}>\n          1.\n        </div>\n        <Button\n          type={\"primary\"}\n          title={\"Login with Spotify\"}\n          action={() => {\n            authorizeUser();\n          }}\n          colors={{ backgroundColor: \"#000\", color: \"#fff\" }}\n        >\n          <SpotifyIcon />\n        </Button>\n      </div>\n      <div className=\"heading__secondary d-flex mb-4 mt-2 mx-3 text-center text-white\">\n        <div className=\"text-white mr-2\" style={{ fontSize: \"28px\" }}>\n          2.\n        </div>\n        Please choose up to three of your favorite music genres.{\" \"}\n      </div>\n      <div className=\"quiz__genres row\">{renderGenres(quizData)}</div>\n      <div\n        onClick={() => {\n          !genreState.length && removeGenresError();\n        }}\n      >\n        <Link to=\"/explore\" className={isGenresError ? \"\" : \"disable-link\"}>\n          <Button\n            type={\"primary\"}\n            title={\"I'm ready!\"}\n            colors={{ backgroundColor: \"rgb(255, 78, 80)\", color: \"#fff\" }}\n          />\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}