{"version":3,"sources":["svg/logo.tsx","components/header/index.tsx","pages/quiz/quizData.tsx","components/button/index.tsx","svg/spotifyIcon.tsx","components/alert/index.tsx","utilities/localStorage.tsx","pages/quiz/index.tsx","graphqlQueries.tsx","components/queryError.tsx","utilities/errorTypes.tsx","svg/backArrow.tsx","svg/nextArrow.tsx","pages/explore/swipeCard/index.tsx","components/cardBody/index.tsx","pages/explore/index.tsx","pages/savedSongs/card/index.tsx","components/modal/index.tsx","pages/savedSongs/savedModalBody.tsx","pages/savedSongs/index.tsx","App.tsx","index.tsx"],"names":["LogoIcon","_ref","fill","react_default","a","createElement","x","y","viewBox","width","height","className","d","Header","getPrimaryColor","getComputedStyle","document","documentElement","getPropertyValue","logo_LogoIcon","react_router_dom","to","quizData","genre","Button","title","type","action","colors","children","onClick","concat","SpotifyIcon","style","marginLeft","backgroundColor","Alert","message","isSuccess","getStorageData","key","data","localStorage","getItem","split","length","JSON","parse","_unused","setStorageData","stringifiedData","stringify","setItem","err","Quiz","props","_useState","useState","Array","_useState2","Object","slicedToArray","genreState","changeGenreState","_useState3","_useState4","isLoginSuccess","changeLoginSuccess","_useState5","_useState6","isLoginError","setIsLoginError","_useState7","_useState8","isGenresError","setIsGenresError","authorizeUser","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","window","location","href","stop","apply","this","arguments","useEffect","state","authError","history","replace","pathname","onLoginError","genresError","onGenresError","selectedGenres","token","getHash","hash","substring","reduce","initial","item","parts","decodeURIComponent","_token","access_token","setTimeout","components_alert_Alert","components_button_Button","spotifyIcon_SpotifyIcon","map","index","name","newState","includes","push","toConsumableArray","indexOfItem","indexOf","splice","onGenreClick","console","log","GET_TRACKS_QUERY","gql","_templateObject","SAVED_TRACKS_QUERY","_templateObject2","USER_PLAYLISTS_QUERY","_templateObject3","USER_DETAILS_QUERY","_templateObject4","ADD_TO_PLAYLIST_QUERY","_templateObject5","QueryError","errorMessage","pushHistory","determineError","BackArrow","version","NextArrow","SwipeCard","nextSong","previousSong","image","rotate","rotateCard","changeCard","backArrow_BackArrow","src","alt","nextArrow_NextArrow","CardBody","arr","artists","preview_url","artist","controls","Dashboard","currentIndex","updateIndex","isSongSaved","setIsSongSaved","isError","setIsError","saveSong","id","savedTracks","storageData","updateStorageData","react_apollo_esm","query","variables","properties","loading","error","graphQLErrors","queryError_QueryError","acc","value","explore_swipeCard_SwipeCard","audioBar","querySelector","load","suggestedTracks","album","images","url","components_cardBody_CardBody","Card","Modal","show","PlaylistModalBody","changeModalState","addToPlaylist","react","SavedSongs","memo","username","setUsername","currentPlaylist","setCurrentPlaylist","userPlaylists","setUserPlaylists","songIds","setSongIds","_useState9","_useState10","savedSongs","setSavedSongs","_useState11","_useState12","modalState","setModalState","_useState13","_useState14","isSavedPlaylist","setIsSavedPlaylist","ids","userQuery","playlistQuery","fn","client","then","display_name","userDetails","catch","result","renderSongs","songs","song","savedSongs_card_Card","cursor","trackId","newSongTracks","filter","newSongIds","removeSong","renderNoTracksMessage","components_modal_Modal","savedModalBody_PlaylistModalBody","playlist_id","snapshot_id","onChange","e","target","httpLink","createHttpLink","uri","authLink","setContext","_","headers","objectSpread","ApolloClient","link","cache","InMemoryCache","App","header","react_router","path","exact","component","Explore","ReactDOM","render","src_App_0","getElementById"],"mappings":"qeAOaA,SAAW,SAAAC,GAAyB,IAAtBC,EAAsBD,EAAtBC,KACzB,OACEC,EAAAC,EAAAC,cAAA,OACEC,EAAE,MACFC,EAAE,MACFC,QAAQ,2EACRC,MAAM,KACNC,OAAO,KACPR,KAAMA,EACNS,UAAU,kBAEVR,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAMO,EAAE,isBACRT,EAAAC,EAAAC,cAAA,QAAMO,EAAE,6oBACRT,EAAAC,EAAAC,cAAA,QAAMO,EAAE,utBACRT,EAAAC,EAAAC,cAAA,QAAMO,EAAE,mZACRT,EAAAC,EAAAC,cAAA,QAAMO,EAAE,mXCWDC,SA7BA,WACb,IAAMC,EAAkB,WACtB,OAAOC,iBAAiBC,SAASC,iBAAiBC,iBAChD,oBAMJ,OAFAJ,IAGEX,EAAAC,EAAAC,cAAA,OAAKM,UAAU,eACbR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,0DACbR,EAAAC,EAAAC,cAACc,EAAD,CAAUjB,KAAMY,MAChBX,EAAAC,EAAAC,cAAA,OAAKM,UAAU,qCACbR,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMC,GAAG,KAAT,aAGJlB,EAAAC,EAAAC,cAAA,MAAIM,UAAU,0DACZR,EAAAC,EAAAC,cAAA,MAAIM,UAAU,iDACZR,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMC,GAAG,YAAT,YAEFlB,EAAAC,EAAAC,cAAA,MAAIM,UAAU,4CACZR,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMC,GAAG,UAAT,4DC3BGC,EAAgC,CAC3C,CAAEC,MAAO,WACT,CAAEA,MAAO,SACT,CAAEA,MAAO,WACT,CAAEA,MAAO,OACT,CAAEA,MAAO,QACT,CAAEA,MAAO,OACT,CAAEA,MAAO,SACT,CAAEA,MAAO,cACT,CAAEA,MAAO,SACT,CAAEA,MAAO,UCDEC,SAAyC,SAAAvB,GAMhD,IALJwB,EAKIxB,EALJwB,MACAC,EAIIzB,EAJJyB,KACAC,EAGI1B,EAHJ0B,OACAC,EAEI3B,EAFJ2B,OACAC,EACI5B,EADJ4B,SAMA,OACE1B,EAAAC,EAAAC,cAAA,OACEyB,QANkB,WACpBH,KAMEhB,UAAS,WAAAoB,OAAaL,EAAb,kEAAAK,OAAkFH,IAE1FH,EACAI,GAAY,QCxBNG,EAAc,WACzB,OACE7B,EAAAC,EAAAC,cAAA,OACEG,QAAQ,sBACRE,OAAO,KACPD,MAAM,KACNwB,MAAO,CAAEC,WAAY,OAAQC,gBAAiB,SAE9ChC,EAAAC,EAAAC,cAAA,QACEH,KAAK,UACLU,EAAE,uzCCJGwB,SAAQ,SAAAnC,GAA0C,IAAvCoC,EAAuCpC,EAAvCoC,QAASC,EAA8BrC,EAA9BqC,UAC/B,OACEnC,EAAAC,EAAAC,cAAA,OACEM,UAAS,6FAAAoB,OACPO,EAAY,mBAAqB,mBAGnCnC,EAAAC,EAAAC,cAAA,MAAIM,UAAU,6BACX2B,EAAY,WAAa,UAE5BnC,EAAAC,EAAAC,cAAA,OAAKM,UAAU,6BAA6B0B,MChBrCE,EAAiB,SAACC,GAC7B,IACE,IAAMC,EAAOC,aAAaC,QAAQH,GAElC,OADIC,GAAMA,EAAKG,MAAM,KACjBH,GAAQA,EAAKG,MAAM,KAAKC,OAAS,EAC5BC,KAAKC,MAAMN,GAEbA,EACP,MAAAO,GACA,OAAO,OAIEC,EAAiB,SAACT,EAAaC,GAC1C,IACE,IAAMS,EAAkBJ,KAAKK,UAAUV,GAIvC,OAFAC,aAAaU,QAAQZ,EAAKU,GAEnBT,EACP,MAAOY,GACP,OAAOA,ICoJIC,SAlKF,SAACC,GAAe,IAAAC,EACYC,mBAAS,IAAIC,OADzBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACpBM,EADoBH,EAAA,GACRI,EADQJ,EAAA,GAAAK,EAEkBP,oBAAS,GAF3BQ,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEpBE,EAFoBD,EAAA,GAEJE,EAFIF,EAAA,GAAAG,EAGaX,oBAAS,GAHtBY,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGpBE,EAHoBD,EAAA,GAGNE,EAHMF,EAAA,GAAAG,EAIef,oBAAS,GAJxBgB,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAIpBE,EAJoBD,EAAA,GAILE,EAJKF,EAAA,GAMrBG,EAAa,eAAA3E,EAAA2D,OAAAiB,EAAA,EAAAjB,CAAAkB,EAAA1E,EAAA2E,KAAG,SAAAC,IAAA,OAAAF,EAAA1E,EAAA6E,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACpBC,OAAOC,SAASC,KACd,kLAFkB,wBAAAL,EAAAM,SAAAR,MAAH,yBAAA/E,EAAAwF,MAAAC,KAAAC,YAAA,GAKnBC,oBAAU,WACR,GAAIrC,EAAM+B,SAASO,OAAStC,EAAM+B,SAASO,MAAMC,UAG/C,OAFAvC,EAAMwC,QAAQC,QAAQ,CAAEC,SAAU,IAAKJ,MAAO,CAAEC,WAAW,UAC3DI,IAIF,GAAI3C,EAAM+B,SAASO,OAAStC,EAAM+B,SAASO,MAAMM,YAG/C,OAFA5C,EAAMwC,QAAQC,QAAQ,CAAEC,SAAU,IAAKJ,MAAO,CAAEM,aAAa,UAC7DC,IAIF,IAAMC,EAAiB9D,EAAe,mBAElC8D,GAAgBtC,EAAiBsC,GAErC,IAAMC,EAAQC,IACVD,GAAO5D,aAAaU,QAAQ,QAASkD,IAExC,IAEH,IAAMC,EAAU,WACd,IAAMC,EAAOnB,OAAOC,SAASkB,KAC1BC,UAAU,GACV7D,MAAM,KACN8D,OAAO,SAASC,EAAcC,GAC7B,GAAIA,EAAM,CACR,IAAIC,EAAQD,EAAKhE,MAAM,KACvB+D,EAAQE,EAAM,IAAMC,mBAAmBD,EAAM,IAE/C,OAAOF,GACN,IAELtB,OAAOC,SAASkB,KAAO,GAEvB,IAAIO,EAASP,EAAKQ,aAOlB,OANID,IACF5C,GAAmB,GACnB8C,WAAW,WACT9C,GAAmB,IAClB,MAEE4C,GAqBHX,EAAgB,WACpBzB,GAAiB,GACjBsC,WAAW,WACTtC,GAAiB,IAChB,MAGCuB,EAAe,WACnB3B,GAAgB,GAChB0C,WAAW,WACT1C,GAAgB,IACf,MAqBL,OACEpE,EAAAC,EAAAC,cAAA,OAAKM,UAAU,8BACZuD,EACC/D,EAAAC,EAAAC,cAAC6G,EAAD,CAAO7E,QAAS,mCAAoCC,WAAW,IAC7D,KACHgC,EACCnE,EAAAC,EAAAC,cAAC6G,EAAD,CAAO7E,QAAS,sBAAuBC,WAAW,IAChD,KACHoC,EACCvE,EAAAC,EAAAC,cAAC6G,EAAD,CACE7E,QAAS,0CACTC,WAAW,IAEX,KACJnC,EAAAC,EAAAC,cAAA,OAAKM,UAAU,oBAAf,oBACAR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,qDACbR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,cAAf,MACAR,EAAAC,EAAAC,cAAC8G,EAAD,CACEzF,KAAM,eACND,MAAO,qBACPE,OAAQ,WACNiD,KAEFhD,OAAQ,uBAERzB,EAAAC,EAAAC,cAAC+G,EAAD,QAGJjH,EAAAC,EAAAC,cAAA,OAAKM,UAAU,mEACbR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,mBAAf,MADF,wIAGkE,KAElER,EAAAC,EAAAC,cAAA,OAAKM,UAAU,oBAAiCW,EAlDpC+F,IAAI,SAACT,EAAMU,GAAP,OAChBnH,EAAAC,EAAAC,cAAA,OAAKM,UAAU,gCACbR,EAAAC,EAAAC,cAAC8G,EAAD,CACE3E,IAAK8E,EACL5F,KAAM,aACND,MAAOmF,EAAKrF,MACZI,OAAQ,kBAvCK,SAAC4F,GACpB,IAAIC,EACJ,IAAK1D,EAAW2D,SAASF,IAASzD,EAAWjB,OAAS,GACpD2E,EAAW1D,GACF4D,KAAKH,GACdxD,EAAiBH,OAAA+D,EAAA,EAAA/D,CAAI4D,QAChB,CACL,IAAMI,EAAc9D,EAAW+D,QAAQN,GAEvC,IAAqB,IAAjBK,EAAoB,QAExBJ,EAAW1D,GACFgE,OAAOF,EAAa,GAE7B7D,EAAiBH,OAAA+D,EAAA,EAAA/D,CAAI4D,KAyBHO,CAAanB,EAAKrF,QAChCK,OACEkC,EAAW2D,SAASb,EAAKrF,OACrB,wBACA,8BA0CVpB,EAAAC,EAAAC,cAAC8G,EAAD,CACEzF,KAAM,UACND,MAAO,aACPG,OAAQ,wBACRD,OAAQ,WACN,OAAKY,EAAe,UAIpByF,QAAQC,IAAI,QAASnE,GACbA,EAAWjB,QAEdI,EAAe,kBAAmBa,GACnCP,EAAMwC,QAAQ2B,KAAK,aAFnBtB,MALF4B,QAAQC,IAAI,QACL/B,+vCC5JZ,IAAMgC,EAAmBC,IAAHC,KAkBhBC,EAAqBF,IAAHG,KAkBlBC,EAAuBJ,IAAHK,KASpBC,EAAqBN,IAAHO,KAQlBC,EAAwBR,IAAHS,KC/CrBC,EAAa,SAAA5I,GAAoD,IAAjD6I,EAAiD7I,EAAjD6I,aAAcC,EAAmC9I,EAAnC8I,YAmBzC,OAbuB,SAACD,GACtB,OAAQA,GACN,IChB4B,sBDiB1B,OAPJ3I,EAAAC,EAAAC,cAAA,OAAKM,UAAU,mFAAf,qCAQE,QAKE,OAJAoI,EAAY,CACV9C,SAAU,IACVJ,MAAO,CAAEC,WAAW,KAEf,MAINkD,CAAeF,IErBXG,SAAY,SAAAhJ,GAAgC,IAA7B0B,EAA6B1B,EAA7B0B,OAC1B,OACExB,EAAAC,EAAAC,cAAA,OAAKyB,QAASH,GACZxB,EAAAC,EAAAC,cAAA,OAAK6I,QAAQ,MAAMxI,OAAO,KAAKD,MAAM,KAAKD,QAAQ,uBAChDL,EAAAC,EAAAC,cAAA,QACEH,KAAK,OACLU,EAAE,sQCNCuI,EAAY,SAAAlJ,GAAiC,IAA9B0B,EAA8B1B,EAA9B0B,OAC1B,OACExB,EAAAC,EAAAC,cAAA,OAAKyB,QAASH,GACZxB,EAAAC,EAAAC,cAAA,OAAK6I,QAAQ,MAAM1I,QAAQ,sBAAsBE,OAAO,KAAKD,MAAM,MACjEN,EAAAC,EAAAC,cAAA,QACEH,KAAK,OACLU,EAAE,0QCDCwI,EAAY,SAAAnJ,GAAkD,IAA/CoJ,EAA+CpJ,EAA/CoJ,SAAUC,EAAqCrJ,EAArCqJ,aAAcC,EAAuBtJ,EAAvBsJ,MAAuB/F,EAC5CC,oBAAS,GADmCE,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAClEgG,EADkE7F,EAAA,GAC1D8F,EAD0D9F,EAAA,GAGnE+F,EAAa,kBAAMD,GAAYD,IAErC,OACErJ,EAAAC,EAAAC,cAAA,OAAKM,UAAU,wCACbR,EAAAC,EAAAC,cAACsJ,EAAD,CACEhI,OAAQ,WACN+H,IACAJ,OAGJnJ,EAAAC,EAAAC,cAAA,OAAKM,UAAU,kCACbR,EAAAC,EAAAC,cAAA,OACEM,UAAS,6CAAAoB,OACPyH,EAAS,aAAe,IAE1BI,IAAKL,EACLM,IAAI,gBAEN1J,EAAAC,EAAAC,cAAA,OACEM,UAAS,4CAAAoB,OACPyH,EAAS,aAAe,IAE1BI,IAAKL,EACLM,IAAI,iBAIR1J,EAAAC,EAAAC,cAACyJ,EAAD,CACEnI,OAAQ,WACN+H,IACAL,SCnCGU,SAAW,SAAA9J,GAKH,IACI+J,EALvBzC,EAImBtH,EAJnBsH,KACA0C,EAGmBhK,EAHnBgK,QACAC,EAEmBjK,EAFnBiK,YACAjI,EACmBhC,EADnBgC,MASA,OACE9B,EAAAC,EAAAC,cAAA,OAAKM,UAAU,8BACbR,EAAAC,EAAAC,cAAA,OACEM,UACEsB,GAASA,EAAMsF,KAAOtF,EAAMsF,KAAO,yCAGpCA,GAEHpH,EAAAC,EAAAC,cAAA,OACEM,UACEsB,GAASA,EAAMkI,OACXlI,EAAMkI,OACN,wDApBWH,EAuBFC,GAtBR5C,IAAI,SAAC8C,EAA0B7C,GACxC,OAAIA,IAAU0C,EAAInH,OAAS,EAAUsH,EAAO5C,KACrC4C,EAAO5C,KAAO,QAsBrBpH,EAAAC,EAAAC,cAAA,SAAOM,UAAU,kBAAkByJ,UAAQ,GACzCjK,EAAAC,EAAAC,cAAA,UAAQuJ,IAAG,GAAA7H,OAAKmI,GAAexI,KAAK,mBCsG7B2I,SAhIG,SAAC9G,GAAe,IAAAC,EACIC,mBAAS,GADbE,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACzB8G,EADyB3G,EAAA,GACX4G,EADW5G,EAAA,GAAAK,EAEMP,oBAAS,GAFfQ,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEzBwG,EAFyBvG,EAAA,GAEZwG,EAFYxG,EAAA,GAAAG,EAGFX,oBAAS,GAHPY,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGzBsG,EAHyBrG,EAAA,GAGhBsG,EAHgBtG,EAAA,GAqB1BuG,EAAW,SAACC,GAChB,IAAMC,EAAcvI,EAAe,gBAEnC,GAAIuI,GAAeA,EAAYrD,SAASoD,GAKtC,OAJAF,GAAW,QACX1D,WAAW,WACT0D,GAAW,IACV,MThBwB,SAACnI,EAAaC,GAC7C,IACE,IAEIS,EAFE6H,EAAcxI,EAAeC,GAGnC,GAAIuI,GAAeA,EAAYlI,OAI7B,OAHAkI,EAAYrD,KAAKjF,GACjBS,EAAkBJ,KAAKK,UAAU4H,GACjCrI,aAAaU,QAAQZ,EAAKU,GACnBA,EAGT,IAAM8G,EAAM,GAIZ,OAHAA,EAAItC,KAAKjF,GACTS,EAAkBJ,KAAKK,UAAU6G,GACjCtH,aAAaU,QAAQZ,EAAKU,GACnBA,EACP,MAAOG,GACP,OAAOA,ISEQ2H,CAAkB,eAAgBH,KAG/CJ,GAAe,GACfxD,WAAW,WACTwD,GAAe,IACd,OAgBP,OACEtK,EAAAC,EAAAC,cAAA,OAAKM,UAAU,0DACZ6J,EACCrK,EAAAC,EAAAC,cAAC6G,EAAD,CAAO7E,QAAS,8BAA+BC,WAAW,IACxD,KACHoI,EACCvK,EAAAC,EAAAC,cAAC6G,EAAD,CAAO7E,QAAS,+BAAgCC,WAAW,IACzD,KAEHC,EAAe,mBACdpC,EAAAC,EAAAC,cAAC4K,EAAA,EAAD,CACEC,MAAOhD,EACPiD,UAAW,CAAE9E,eAAgB9D,EAAe,qBAE3C,SAAC6I,GACA,GAAIA,EAAWC,QAAS,OAAOlL,EAAAC,EAAAC,cAAA,wBAC/B,GAAI+K,EAAWE,MAAO,CACpB,IAAMA,EAAQF,EAAWE,MAAMC,cAAc,GAAGlJ,QAGhD,OADA2F,QAAQC,IAAI,KAAMqD,GAEhBnL,EAAAC,EAAAC,cAACmL,EAAD,CACEzC,YAAaxF,EAAMwC,QAAQ2B,KAC3BoB,aAAcwC,IAIlB,OACEnL,EAAAC,EAAAC,cAAA,OAAKM,UAAU,yDACbR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,wCACbR,EAAAC,EAAAC,cAAA,QAAMM,UAAU,cAAhB,mBAAoD,IAzCrD4B,EAAe,mBAEhBmE,OACZ,SAAC+E,EAAeC,EAAepE,EAAe0C,GAC5C,OAAI1C,IAAU0C,EAAInH,OAAS,EAAU4I,EAAI1J,OAAO2J,GACzCD,EAAI1J,OAAJ,GAAAA,OAAc2J,EAAd,QAET,KAqCYvL,EAAAC,EAAAC,cAACsL,EAAD,CACEtC,SAAU,kBAnFX,WACfkB,EAAYD,EAAe,GAC3B,IAAMsB,EAAW5K,SAAS6K,cACxB,oBAEED,GAAUA,EAASE,OA8ESzC,IAChBC,aAAc,kBA5EX,WACnBiB,EAAYD,EAAe,GAC3B,IAAMsB,EAAW5K,SAAS6K,cACxB,oBAEED,GAAUA,EAASE,OAuEaxC,IACpBC,MACE6B,EAAW3I,KAAKsJ,gBAAgBzB,GAAc0B,MAAMC,OACjDC,MAIP/L,EAAAC,EAAAC,cAAC8L,EAAD,CACElC,QACEmB,EAAW3I,KAAKsJ,gBAAgBzB,GAAcL,QAEhD1C,KAAM6D,EAAW3I,KAAKsJ,gBAAgBzB,GAAc/C,KACpD2C,YACEkB,EAAW3I,KAAKsJ,gBAAgBzB,GAAcJ,cAGlD/J,EAAAC,EAAAC,cAAC8G,EAAD,CACEzF,KAAM,UACND,MAAO,kBACPE,OAAQ,kBACNiJ,EAASQ,EAAW3I,KAAKsJ,gBAAgBzB,GAAcO,KAEzDjJ,OAAQ,6BAQpB2B,EAAMwC,QAAQ2B,KAAK,CACjBzB,SAAU,IACVJ,MAAO,CAAEM,aAAa,QCjInBiG,SAAO,SAAAnM,GAA0B,IAAvBsJ,EAAuBtJ,EAAvBsJ,MACrB,OACEpJ,EAAAC,EAAAC,cAAA,OAAKM,UAAU,wCACbR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,4BACbR,EAAAC,EAAAC,cAAA,OACEM,UAAU,4CACViJ,IAAKL,EACLM,IAAI,oBCRDwC,SAAuC,SAAApM,GAAwB,IAArB4B,EAAqB5B,EAArB4B,SAAUyK,EAAWrM,EAAXqM,KAC/D,OACEnM,EAAAC,EAAAC,cAAA,OACEM,UAAS,iEAAAoB,QAAoEuK,GAC3E,eAEFnM,EAAAC,EAAAC,cAAA,OAAKM,UAAU,gGACZkB,MCJI0K,EAAoB,SAAAtM,GAIP,IAHxBsH,EAGwBtH,EAHxBsH,KACAiF,EAEwBvM,EAFxBuM,iBACAC,EACwBxM,EADxBwM,cAEA,OACEtM,EAAAC,EAAAC,cAACqM,EAAA,SAAD,KACEvM,EAAAC,EAAAC,cAAA,OAAKM,UAAU,mDAAf,gBAGAR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,0DAAf,gDACgD4G,EADhD,MAGApH,EAAAC,EAAAC,cAAA,OAAKM,UAAU,mBACbR,EAAAC,EAAAC,cAAC8G,EAAD,CACEzF,KAAM,UACND,MAAO,SACPE,OAAQ,WACN6K,KAEF5K,OAAQ,0BAEVzB,EAAAC,EAAAC,cAAC8G,EAAD,CACEzF,KAAM,UACND,MAAO,SACPE,OAAQ,WACN8K,IACAD,KAEF5K,OAAQ,2BCyMH+K,SA3NIC,eAAK,SAACrJ,GAAe,IAAAC,EACNC,mBAAS,IADHE,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAC/BqJ,EAD+BlJ,EAAA,GACrBmJ,EADqBnJ,EAAA,GAAAK,EAEQP,mBAAS,CAAEoH,GAAI,GAAItD,KAAM,KAFjCtD,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAE/B+I,EAF+B9I,EAAA,GAEd+I,EAFc/I,EAAA,GAAAG,EAGIX,mBAAS,IAHbY,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAG/B6I,EAH+B5I,EAAA,GAGhB6I,EAHgB7I,EAAA,GAAAG,EAIRf,mBAAS,IAJDgB,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAI/B2I,EAJ+B1I,EAAA,GAItB2I,EAJsB3I,EAAA,GAAA4I,EAKF5J,mBAAS,IALP6J,EAAA1J,OAAAC,EAAA,EAAAD,CAAAyJ,EAAA,GAK/BE,EAL+BD,EAAA,GAKnBE,EALmBF,EAAA,GAAAG,EAMFhK,oBAAS,GANPiK,EAAA9J,OAAAC,EAAA,EAAAD,CAAA6J,EAAA,GAM/BE,EAN+BD,EAAA,GAMnBE,EANmBF,EAAA,GAAAG,EAOQpK,mBAAS,IAPjBqK,EAAAlK,OAAAC,EAAA,EAAAD,CAAAiK,EAAA,GAO/BE,EAP+BD,EAAA,GAOdE,EAPcF,EAAA,GAStClI,oBAAU,WACR,IAAMqI,EAAM1L,EAAe,gBAC3B6K,EAAWa,GACXC,EAAUC,IACT,IAEH,IAAMD,EAAY,SAACE,GACjBC,GACGnD,MAAM,CACLA,MAAOzC,IAER6F,KAAK,SAAArO,GAAiD,IAAvBsO,EAAuBtO,EAA9CwC,KAAQ+L,YAAeD,aAC9BH,EAAGG,GACHzB,EAAYyB,KAEbE,MAAM,SAAApL,GAAG,OACRE,EAAMwC,QAAQ2B,KAAK,CACjBzB,SAAU,IACVJ,MAAO,CAAEC,WAAW,QAKtBqI,EAAgB,SAACtB,GACrBwB,GACGnD,MAAM,CACLA,MAAO3C,EACP4C,UAAW,CAAE0B,cAEdyB,KAAK,SAAAI,GACJ1B,EAAmB0B,EAAOjM,KAAKwK,cAAc,IAC7CC,EAAiBwB,EAAOjM,KAAKwK,iBAE9BwB,MAAM,SAAApL,GAAG,OAAI2E,QAAQC,IAAI,QAAS5E,MA0CjCsL,EAAc,SAClBC,GAQA,OAAOA,EAAMvH,IACX,SACEwH,EAOAvH,GARF,OAUEnH,EAAAC,EAAAC,cAAA,OACEmC,IAAKqM,EAAKhE,GACVlK,UAAU,8FAEVR,EAAAC,EAAAC,cAACyO,EAAD,CAAMtM,IAAK8E,EAAOiC,MAAOsF,EAAK7C,MAAMC,OAAOC,MAC3C/L,EAAAC,EAAAC,cAAC8L,EAAD,CACElC,QAAS4E,EAAK5E,QACdC,YAAa2E,EAAK3E,YAClB3C,KAAMsH,EAAKtH,KACXtF,MAAO,CACLsF,KAAM,+CACN4C,OAAQ,0DAGZhK,EAAAC,EAAAC,cAAA,OACEM,UAAU,6CACVsB,MAAO,CAAE8M,OAAQ,WACjBjN,QAAS,kBAzDA,SAACkN,GAClB,IAAMC,EAAgB1B,EAAW2B,OAC/B,SAACtI,GAAD,OAMMA,EAAKiE,KAAOmE,IAEdG,EAAahC,EAAQ+B,OAAO,SAACtI,GAAD,OAAkBA,IAASoI,IAC7D5B,EAAW+B,GACX3B,EAAcyB,GACdhM,EAAe,eAAgBkM,GA4CRC,CAAWP,EAAKhE,MAHjC,wBAsBF2B,EAAmB,WACvB,OAAOoB,GAAeD,IAGlB0B,EAAwB,kBAC5BlP,EAAAC,EAAAC,cAAA,OAAKM,UAAU,mFAAf,sCAKF,OAAOwM,EACLhN,EAAAC,EAAAC,cAAC4K,EAAA,EAAD,CAAOC,MAAO7C,EAAoB8C,UAAW,CAAEL,YAAaqC,IACzD,SAAC/B,GACA,GAAIA,EAAWC,QAAS,OAAOlL,EAAAC,EAAAC,cAAA,yBAC/B,GAAI+K,EAAWE,MAAO,CACpB,IAAMA,EAAQF,EAAWE,MAAMC,cAAc,GAAGlJ,QAChD,OACElC,EAAAC,EAAAC,cAACmL,EAAD,CAAYzC,YAAaxF,EAAMwC,QAAQ2B,KAAMoB,aAAcwC,IAG7D,OAAKiC,EAAW1K,QAAWN,EAAe,gBAAgBM,SAGzD0K,EAAW1K,QAAU2K,EAAcpC,EAAW3I,KAAKqI,aAE7C+B,GAAYE,EACjB5M,EAAAC,EAAAC,cAAA,OAAKM,UAAU,mBACZoN,EACC5N,EAAAC,EAAAC,cAAC6G,EAAD,CACE7E,QACE,0DAEFC,WAAW,IAEX,KACJnC,EAAAC,EAAAC,cAACiP,EAAD,CAAOhD,KAAMqB,GACXxN,EAAAC,EAAAC,cAACkP,EAAD,CACEhI,KAAMwF,EAAgBxF,KACtBiF,iBAAkB,kBAAMA,KACxBC,cAAe,WArIzBM,EAAgBlC,IAClBwD,GACGnD,MAAM,CACLA,MAAOvC,EACPwC,UAAW,CACTgC,QAAS5K,EAAe,gBACxBiN,YAAazC,EAAgBlC,MAGhCyD,KAAK,SAAAI,GACJV,EAAmBU,EAAOjM,KAAKgK,cAAcgD,aAC7CxI,WAAW,WACT+G,EAAmB,KAClB,OAEJS,MAAM,SAAApL,GAAG,OAAI2E,QAAQC,IAAI,QAAS5E,SAyH7BlD,EAAAC,EAAAC,cAAA,OAAKM,UAAU,qEACbR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,yBAAf,wBAGAR,EAAAC,EAAAC,cAAA,UACEM,UAAU,eACV+O,SAAU,SAAAC,GAAC,OA5GCjE,EA6GS,CACjBnE,KAAMoI,EAAEC,OAAOlE,MACfb,IA7DGtD,EA6DeoI,EAAEC,OAAOlE,MA5DIuB,EAAciC,OAC7D,SAACtI,GAAD,OAAwCA,EAAKW,OAASA,IAExC,GAAGsD,UArDnBmC,EAAmBtB,GADM,IAACA,EAkDLnE,IAiEU0F,EAzD3B5F,IAAI,SAACT,EAAMU,GAAP,OAAiBnH,EAAAC,EAAAC,cAAA,UAAQmC,IAAK8E,GAAQV,EAAKW,SA2DvCpH,EAAAC,EAAAC,cAAC8G,EAAD,CACEzF,KAAM,UACND,MAAK,uBAAAM,OAAyBgL,EAAgBxF,KAAzC,KACL5F,OAAQ,WACN6K,KAEF5K,OAAQ,2BAGZzB,EAAAC,EAAAC,cAAA,OAAKM,UAAU,OAAOgO,EAAYpB,KAGpCpN,EAAAC,EAAAC,cAAA,4BAhDOgP,MAsDfA,OC7NEQ,SAAWC,YAAe,CAC9BC,IAAK,mCAGDC,EAAWC,YAAW,SAACC,EAADjQ,GAAoB,IAAdkQ,EAAclQ,EAAdkQ,QAC1B7J,EAAQ/D,EAAe,SAC7B,MAAO,CACL4N,QAAQvM,OAAAwM,EAAA,EAAAxM,CAAA,GACHuM,EADE,CAEL7J,aAKO+H,GAAS,IAAIgC,IAAa,CACrCC,KAAMN,EAASjO,OAAO8N,GACtBU,MAAO,IAAIC,MAmBEC,GAhBH,WACV,OACEtQ,EAAAC,EAAAC,cAAC4K,EAAA,EAAD,CAAgBoD,OAAQA,IACtBlO,EAAAC,EAAAC,cAACe,EAAA,EAAD,KACEjB,EAAAC,EAAAC,cAACqQ,EAAD,MACAvQ,EAAAC,EAAAC,cAACsQ,EAAA,EAAD,KACExQ,EAAAC,EAAAC,cAACsQ,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWxN,IACjCnD,EAAAC,EAAAC,cAACsQ,EAAA,EAAD,CAAOC,KAAK,WAAWE,UAAWC,IAClC5Q,EAAAC,EAAAC,cAACsQ,EAAA,EAAD,CAAOC,KAAK,SAASE,UAAWnE,IAChCxM,EAAAC,EAAAC,cAACsQ,EAAA,EAAD,CAAOC,KAAK,KAAKE,UAAWxN,QCtCtC0N,IAASC,OAAO9Q,EAAAC,EAAAC,cAAC6Q,GAAD,MAASlQ,SAASmQ,eAAe","file":"static/js/main.194521c6.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../Shared.css\";\n\ninterface LogoProps {\n  fill: string;\n}\n\nexport const LogoIcon = ({ fill }: LogoProps) => {\n  return (\n    <svg\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"11.020999908447266 10.449000358581543 80.15800476074219 78.4020004272461\"\n      width=\"45\"\n      height=\"45\"\n      fill={fill}\n      className=\"bg-transparent\"\n    >\n      <g>\n        <path d=\"M64.18,21.33v23.024c0,0.094,0.039,0.18,0.098,0.249h0.004c0.062,0.062,0.151,0.102,0.245,0.102h23.024   c0.094,0,0.184-0.039,0.246-0.102h0.004c0.062-0.069,0.098-0.155,0.098-0.249V21.33c0-0.094-0.039-0.18-0.098-0.242l-0.004-0.008   c-0.062-0.055-0.152-0.094-0.246-0.094H64.526c-0.094,0-0.183,0.039-0.245,0.102S64.18,21.236,64.18,21.33 M60.898,44.354V21.33   c0-0.99,0.409-1.895,1.067-2.557h0.004c0.659-0.663,1.563-1.068,2.557-1.068h23.024c0.994,0,1.898,0.405,2.557,1.068h0.004   c0.659,0.662,1.068,1.566,1.068,2.557v23.024c0,0.998-0.409,1.901-1.068,2.557l-0.004,0.008c-0.658,0.655-1.562,1.067-2.557,1.067   H64.526c-0.993,0-1.897-0.412-2.557-1.067l-0.004-0.008C61.308,46.256,60.898,45.353,60.898,44.354z\" />\n        <path d=\"M19.95,55.057v29.596c0,0.249,0.104,0.482,0.272,0.646c0.164,0.168,0.397,0.273,0.647,0.273h29.595   c0.25,0,0.479-0.105,0.647-0.273c0.167-0.164,0.272-0.397,0.272-0.646V55.057c0-0.25-0.105-0.483-0.272-0.647   c-0.168-0.167-0.397-0.269-0.647-0.269H20.87c-0.25,0-0.483,0.102-0.647,0.269C20.055,54.573,19.95,54.807,19.95,55.057    M16.668,84.652V55.057c0-1.158,0.477-2.21,1.236-2.966c0.76-0.761,1.812-1.231,2.966-1.231h29.595   c1.158,0,2.206,0.471,2.967,1.231c0.764,0.756,1.23,1.808,1.23,2.966v29.596c0,1.161-0.467,2.205-1.23,2.969   c-0.761,0.757-1.809,1.229-2.967,1.229H20.87c-1.154,0-2.206-0.472-2.966-1.229C17.145,86.857,16.668,85.813,16.668,84.652z\" />\n        <path d=\"M30.633,31.595v43.411c0,0.585,0.233,1.111,0.615,1.489l0.004,0.008c0.382,0.382,0.908,0.616,1.492,0.616h43.408   c0.58,0,1.106-0.238,1.488-0.624h0.008c0.378-0.378,0.611-0.904,0.611-1.489V31.595c0-0.576-0.233-1.103-0.619-1.484   c-0.382-0.386-0.908-0.624-1.488-0.624H32.744c-0.584,0-1.11,0.238-1.492,0.62v0.004C30.87,30.492,30.633,31.019,30.633,31.595    M27.351,75.006V31.595c0-1.473,0.608-2.833,1.583-3.808l0.004,0.004c0.978-0.981,2.326-1.586,3.807-1.586h43.408   c1.484,0,2.833,0.604,3.807,1.582c0.979,0.975,1.583,2.335,1.583,3.808v43.411c0,1.481-0.604,2.826-1.583,3.805v0.008   c-0.974,0.974-2.322,1.578-3.807,1.578H32.744c-1.477,0-2.825-0.604-3.803-1.578l-0.004-0.008h-0.004   C27.959,77.832,27.351,76.479,27.351,75.006z\" />\n        <path d=\"M14.299,13.734v10.799h10.799V13.734H14.299z M11.021,25.134V13.126c0-0.732,0.3-1.403,0.787-1.886   c0.483-0.487,1.154-0.791,1.891-0.791h12.003c0.733,0,1.399,0.304,1.891,0.795V11.24c0.483,0.482,0.783,1.153,0.783,1.886v12.008   c0,0.729-0.3,1.398-0.783,1.886l-0.004,0.008c-0.491,0.479-1.153,0.787-1.887,0.787H13.699c-0.736,0-1.407-0.308-1.891-0.787   v-0.004C11.325,26.536,11.021,25.866,11.021,25.134z\" />\n        <path d=\"M62.281,56.935v10.219H72.5V56.935H62.281z M59,67.809V56.296c0-0.726,0.301-1.388,0.771-1.863   c0.479-0.476,1.139-0.771,1.867-0.771h11.509c0.725,0,1.384,0.296,1.862,0.771c0.472,0.476,0.768,1.138,0.768,1.863v11.513   c0,0.725-0.296,1.379-0.768,1.862c-0.479,0.468-1.138,0.771-1.862,0.771H61.639c-0.729,0-1.388-0.304-1.867-0.771   C59.301,69.188,59,68.533,59,67.809z\" />\n      </g>\n    </svg>\n  );\n};\n","import React from \"react\";\nimport { LogoIcon } from \"../../svg/logo\";\nimport { Link } from \"react-router-dom\";\nimport \"./Header.css\";\n\nconst Header = () => {\n  const getPrimaryColor = () => {\n    return getComputedStyle(document.documentElement).getPropertyValue(\n      \"--color-primary\"\n    );\n  };\n\n  getPrimaryColor();\n\n  return (\n    <div className=\"header px-4\">\n      <div className=\" header__logo bg-transparent d-flex align-items-center\">\n        <LogoIcon fill={getPrimaryColor()} />\n        <div className=\"header__title bg-transparent ml-2\">\n          <Link to=\"/\">Musicon</Link>\n        </div>\n      </div>\n      <ul className=\"header__links d-flex bg-transparent align-items-center\">\n        <li className=\"d-flex bg-transparent align-items-center mr-4\">\n          <Link to=\"/explore\">Explore</Link>\n        </li>\n        <li className=\"d-flex bg-transparent align-items-center\">\n          <Link to=\"/saved\">Saved Songs</Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Header;\n","export const quizData: { genre: string }[] = [\n  { genre: \"Hip-hop\" },\n  { genre: \"Latin\" },\n  { genre: \"Country\" },\n  { genre: \"Pop\" },\n  { genre: \"Rock\" },\n  { genre: \"R&B\" },\n  { genre: \"Dance\" },\n  { genre: \"Electronic\" },\n  { genre: \"Chill\" },\n  { genre: \"Sleep\" }\n];\n","import React, { FunctionComponent } from \"react\";\nimport \"./Button.css\";\n\ninterface ButtonProps {\n  title: string;\n  type: string;\n  action: () => void;\n  colors: string;\n}\nexport const Button: FunctionComponent<ButtonProps> = ({\n  title,\n  type,\n  action,\n  colors,\n  children\n}) => {\n  const onButtonClick = () => {\n    action();\n  };\n\n  return (\n    <div\n      onClick={onButtonClick}\n      className={`button__${type} d-flex align-items-center justify-content-center text-center ${colors}`}\n    >\n      {title}\n      {children || null}\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const SpotifyIcon = () => {\n  return (\n    <svg\n      viewBox=\"0 0 427.652 427.652\"\n      height=\"45\"\n      width=\"45\"\n      style={{ marginLeft: \"15px\", backgroundColor: \"#000\" }}\n    >\n      <path\n        fill=\"#00D95F\"\n        d=\"M213.826,0C95.733,0,0,95.733,0,213.826s95.733,213.826,213.826,213.826\n\ts213.826-95.733,213.826-213.826S331.919,0,213.826,0z M306.886,310.32c-2.719,4.652-7.612,7.246-12.638,7.247\n\tc-2.506,0-5.044-0.645-7.364-2c-38.425-22.456-82.815-26.065-113.295-25.138c-33.763,1.027-58.523,7.692-58.769,7.76\n\tc-7.783,2.126-15.826-2.454-17.961-10.236c-2.134-7.781,2.43-15.819,10.209-17.962c1.116-0.307,27.76-7.544,64.811-8.766\n\tc21.824-0.72,42.834,0.801,62.438,4.52c24.83,4.71,47.48,12.978,67.322,24.574C308.612,294.393,310.96,303.349,306.886,310.32z\n\t M334.07,253.861c-3.22,5.511-9.016,8.583-14.97,8.584c-2.968,0-5.975-0.763-8.723-2.369c-45.514-26.6-98.097-30.873-134.2-29.776\n\tc-39.994,1.217-69.323,9.112-69.614,9.192c-9.217,2.515-18.746-2.906-21.275-12.124c-2.528-9.218,2.879-18.738,12.093-21.277\n\tc1.322-0.364,32.882-8.937,76.77-10.384c25.853-0.852,50.739,0.949,73.96,5.354c29.412,5.58,56.241,15.373,79.744,29.108\n\tC336.115,234.995,338.897,245.603,334.07,253.861z M350.781,202.526c-3.641,0-7.329-0.936-10.7-2.906\n\tc-108.207-63.238-248.572-25.643-249.977-25.255c-11.313,3.117-23.008-3.527-26.124-14.839\n\tc-3.117-11.312,3.527-23.008,14.839-26.124c1.621-0.447,40.333-10.962,94.166-12.737c31.713-1.044,62.237,1.164,90.72,6.567\n\tc36.077,6.844,68.987,18.856,97.815,35.704c10.13,5.92,13.543,18.931,7.623,29.061C365.193,198.757,358.084,202.526,350.781,202.526\n\tz\"\n      />\n    </svg>\n  );\n};\n","import React from \"react\";\nimport \"./Alert.css\";\n\ninterface MessageProps {\n  message: string;\n  isSuccess: boolean;\n}\n\nexport const Alert = ({ message, isSuccess }: MessageProps) => {\n  return (\n    <div\n      className={`message message__success d-flex justify-content-center flex-column align-items-center p-3 ${\n        isSuccess ? \"message__success\" : \"message__error\"\n      }`}\n    >\n      <h5 className=\"text-white bg-transparent\">\n        {isSuccess ? \"Success!\" : \"Error!\"}\n      </h5>\n      <div className=\"text-white bg-transparent\">{message}</div>\n    </div>\n  );\n};\n","const TRACK_DATA = \"track_data\";\n\nexport const getStorageData = (key: string) => {\n  try {\n    const data = localStorage.getItem(key);\n    if (data) data.split(\"]\");\n    if (data && data.split(\"]\").length > 1) {\n      return JSON.parse(data);\n    }\n    return data;\n  } catch {\n    return null;\n  }\n};\n\nexport const setStorageData = (key: string, data: any) => {\n  try {\n    const stringifiedData = JSON.stringify(data);\n\n    localStorage.setItem(key, stringifiedData);\n\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const updateStorageData = (key: string, data: string) => {\n  try {\n    const storageData = getStorageData(key);\n\n    let stringifiedData;\n    if (storageData && storageData.length) {\n      storageData.push(data);\n      stringifiedData = JSON.stringify(storageData);\n      localStorage.setItem(key, stringifiedData);\n      return stringifiedData;\n    }\n\n    const arr = [];\n    arr.push(data);\n    stringifiedData = JSON.stringify(arr);\n    localStorage.setItem(key, stringifiedData);\n    return stringifiedData;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const removeStorageData = () => {\n  try {\n    localStorage.removeItem(TRACK_DATA);\n    return;\n  } catch {\n    return null;\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { quizData } from \"./quizData\";\nimport { Button } from \"../../components/button\";\nimport { SpotifyIcon } from \"../../svg/spotifyIcon\";\nimport { Alert } from \"../../components/alert\";\nimport { getStorageData, setStorageData } from \"../../utilities/localStorage\";\nimport \"./Quiz.css\";\nimport \"../../Shared.css\";\n\nconst Quiz = (props: any) => {\n  const [genreState, changeGenreState] = useState(new Array());\n  const [isLoginSuccess, changeLoginSuccess] = useState(false);\n  const [isLoginError, setIsLoginError] = useState(false);\n  const [isGenresError, setIsGenresError] = useState(false);\n\n  const authorizeUser = async () => {\n    window.location.href =\n      \"https://accounts.spotify.com/en/authorize?client_id=b1e047dc11e749cfb928e1d33b784a2b&response_type=token&redirect_uri=http:%2F%2Flocalhost:3000%2F&scope=playlist-modify-public\";\n  };\n\n  useEffect(() => {\n    if (props.location.state && props.location.state.authError) {\n      props.history.replace({ pathname: \"/\", state: { authError: false } });\n      onLoginError();\n      return;\n    }\n\n    if (props.location.state && props.location.state.genresError) {\n      props.history.replace({ pathname: \"/\", state: { genresError: false } });\n      onGenresError();\n      return;\n    }\n\n    const selectedGenres = getStorageData(\"selected_genres\");\n\n    if (selectedGenres) changeGenreState(selectedGenres);\n\n    const token = getHash();\n    if (token) localStorage.setItem(\"token\", token);\n    return;\n  }, []);\n\n  const getHash = () => {\n    const hash = window.location.hash\n      .substring(1)\n      .split(\"&\")\n      .reduce(function(initial: any, item) {\n        if (item) {\n          var parts = item.split(\"=\");\n          initial[parts[0]] = decodeURIComponent(parts[1]);\n        }\n        return initial;\n      }, {});\n\n    window.location.hash = \"\";\n\n    let _token = hash.access_token;\n    if (_token) {\n      changeLoginSuccess(true);\n      setTimeout(function() {\n        changeLoginSuccess(false);\n      }, 2000);\n    }\n    return _token;\n  };\n\n  const onGenreClick = (name: string) => {\n    let newState;\n    if (!genreState.includes(name) && genreState.length < 3) {\n      newState = genreState;\n      newState.push(name);\n      changeGenreState([...newState]);\n    } else {\n      const indexOfItem = genreState.indexOf(name);\n\n      if (indexOfItem === -1) return;\n\n      newState = genreState;\n      newState.splice(indexOfItem, 1);\n\n      changeGenreState([...newState]);\n    }\n  };\n\n  const onGenresError = () => {\n    setIsGenresError(true);\n    setTimeout(function() {\n      setIsGenresError(false);\n    }, 2000);\n  };\n\n  const onLoginError = () => {\n    setIsLoginError(true);\n    setTimeout(function() {\n      setIsLoginError(false);\n    }, 2000);\n  };\n\n  const renderGenres = (genres: { genre: string }[]) => {\n    return genres.map((item, index: number) => (\n      <div className=\"px-1 col-6 col-sm-5 col-md-2\">\n        <Button\n          key={index}\n          type={\"quiz-empty\"}\n          title={item.genre}\n          action={() => onGenreClick(item.genre)}\n          colors={\n            genreState.includes(item.genre)\n              ? \"bg-primary text-white\"\n              : \"bg-white text-primary\"\n          }\n        />\n      </div>\n    ));\n  };\n\n  return (\n    <div className=\"quiz h-100 content-wrapper\">\n      {isLoginSuccess ? (\n        <Alert message={\"You have logged in successfully!\"} isSuccess={true} />\n      ) : null}\n      {isLoginError ? (\n        <Alert message={\"Please login first!\"} isSuccess={false} />\n      ) : null}\n      {isGenresError ? (\n        <Alert\n          message={\"Please choose at least one genre first!\"}\n          isSuccess={false}\n        />\n      ) : null}\n      <div className=\"heading__primary\">Before We Start!</div>\n      <div className=\"d-flex align-items-center heading__secondary px-3\">\n        <div className=\"text-white\">1.</div>\n        <Button\n          type={\"primary ml-3\"}\n          title={\"Login with Spotify\"}\n          action={() => {\n            authorizeUser();\n          }}\n          colors={\"bg-black text-white\"}\n        >\n          <SpotifyIcon />\n        </Button>\n      </div>\n      <div className=\"heading__secondary d-flex mb-4 mt-2 px-3 text-center text-white\">\n        <div className=\"text-white mx-2\">2.</div>\n        Choose up to three of your favorite music genres. Save the songs that\n        you like and transfer them right to your real Spotify playlist!{\" \"}\n      </div>\n      <div className=\"quiz__genres row\">{renderGenres(quizData)}</div>\n\n      <Button\n        type={\"primary\"}\n        title={\"I'm ready!\"}\n        colors={\"bg-primary text-white\"}\n        action={() => {\n          if (!getStorageData(\"token\")) {\n            console.log(\"here\");\n            return onLoginError();\n          }\n          console.log(\"genre\", genreState);\n          return !genreState.length\n            ? onGenresError()\n            : (setStorageData(\"selected_genres\", genreState),\n              props.history.push(\"/explore\"));\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Quiz;\n","import gql from \"graphql-tag\";\n\nexport const GET_TRACKS_QUERY = gql`\n  query TracksQuery($selectedGenres: [String!]!) {\n    suggestedTracks(selectedGenres: $selectedGenres) {\n      id\n      name\n      artists {\n        name\n      }\n      preview_url\n      album {\n        images {\n          url\n        }\n      }\n    }\n  }\n`;\n\nexport const SAVED_TRACKS_QUERY = gql`\n  query SavedTracks($savedTracks: [String!]!) {\n    savedTracks(savedTracks: $savedTracks) {\n      id\n      name\n      artists {\n        name\n      }\n      preview_url\n      album {\n        images {\n          url\n        }\n      }\n    }\n  }\n`;\n\nexport const USER_PLAYLISTS_QUERY = gql`\n  query userPlaylists($username: String!) {\n    userPlaylists(username: $username) {\n      id\n      name\n    }\n  }\n`;\n\nexport const USER_DETAILS_QUERY = gql`\n  query userDetails {\n    userDetails {\n      display_name\n    }\n  }\n`;\n\nexport const ADD_TO_PLAYLIST_QUERY = gql`\n  query addToPlaylist($songIds: [String!]!, $playlist_id: String!) {\n    addToPlaylist(songIds: $songIds, playlist_id: $playlist_id) {\n      snapshot_id\n    }\n  }\n`;\n","import React from \"react\";\nimport { SAVED_TRACKS_ERROR } from \"../utilities/errorTypes\";\n\ninterface QueryErrorProps {\n  errorMessage: string;\n  pushHistory: ({}) => void;\n}\n\nexport const QueryError = ({ errorMessage, pushHistory }: QueryErrorProps) => {\n  const renderNoTracksMessage = () => (\n    <div className=\"heading__primary content-wrapper d-flex justify-content-center text-center px-4\">\n      You haven't saved any tracks yet.\n    </div>\n  );\n  const determineError = (errorMessage: string) => {\n    switch (errorMessage) {\n      case SAVED_TRACKS_ERROR:\n        return renderNoTracksMessage();\n      default:\n        pushHistory({\n          pathname: \"/\",\n          state: { authError: true }\n        });\n        return null;\n    }\n  };\n\n  return determineError(errorMessage);\n};\n","export const SAVED_TRACKS_ERROR = \"No saved tracks yet\";\n\nexport const USER_DETAILS_ERROR = \"Problem occurred while fetching user's data\";\n\nexport const SUGGESTED_TRACKS_ERROR =\n  \"Problem occurred while fetching suggested tracks\";\n\nexport const USER_PLAYLISTS_ERROR =\n  \"Problem occurred while fetching user playlists\";\n\nexport const ADD_TO_PLAYLIST_ERROR =\n  \"Problem occurred while adding songs to user's playlist\";\n\nexport const UNAUTHORIZED = \"Request failed with status code 401\";\n\nexport const USER_DATA_ERROR = \"Problem occurred while fetching user's data\"\n","import React from \"react\";\n\ninterface BackArrowProps {\n  action: () => void;\n}\n\nexport const BackArrow = ({ action }: BackArrowProps) => {\n  return (\n    <div onClick={action}>\n      <svg version=\"1.1\" height=\"40\" width=\"40\" viewBox=\"0 0 240.823 240.823\">\n        <path\n          fill=\"#fff\"\n          d=\"M57.633,129.007L165.93,237.268c4.752,4.74,12.451,4.74,17.215,0c4.752-4.74,4.752-12.439,0-17.179\n\t\tl-99.707-99.671l99.695-99.671c4.752-4.74,4.752-12.439,0-17.191c-4.752-4.74-12.463-4.74-17.215,0L57.621,111.816\n\t\tC52.942,116.507,52.942,124.327,57.633,129.007z\"\n        />\n      </svg>\n    </div>\n  );\n};\n","import React from \"react\";\n\ninterface FrontArrowProps {\n  action: () => void;\n}\n\nexport const NextArrow = ({ action }: FrontArrowProps) => {\n  return (\n    <div onClick={action}>\n      <svg version=\"1.1\" viewBox=\"0 0 240.823 240.823\" height=\"40\" width=\"40\">\n        <path\n          fill=\"#fff\"\n          d=\"M183.189,111.816L74.892,3.555c-4.752-4.74-12.451-4.74-17.215,0c-4.752,4.74-4.752,12.439,0,17.179\n       l99.707,99.671l-99.695,99.671c-4.752,4.74-4.752,12.439,0,17.191c4.752,4.74,12.463,4.74,17.215,0l108.297-108.261\n       C187.881,124.315,187.881,116.495,183.189,111.816z\"\n        />\n      </svg>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport \"./SwipeCard.css\";\nimport { BackArrow } from \"../../../svg/backArrow\";\nimport { NextArrow } from \"../../../svg/nextArrow\";\n\ninterface CardProps {\n  nextSong: () => void;\n  previousSong: () => void;\n  image: string;\n}\n\nexport const SwipeCard = ({ nextSong, previousSong, image }: CardProps) => {\n  const [rotate, rotateCard] = useState(false);\n\n  const changeCard = () => rotateCard(!rotate);\n\n  return (\n    <div className=\"swipe-card d-flex align-items-center\">\n      <BackArrow\n        action={() => {\n          changeCard();\n          previousSong();\n        }}\n      />\n      <div className=\"swipe-card__image-wrapper mx-4\">\n        <img\n          className={`swipe-card__image swipe-card__image-front ${\n            rotate ? \"rotateNext\" : \"\"\n          }`}\n          src={image}\n          alt=\"album cover\"\n        />\n        <img\n          className={`swipe-card__image swipe-card__image-back ${\n            rotate ? \"rotateBack\" : \"\"\n          }`}\n          src={image}\n          alt=\"album cover\"\n        />\n      </div>\n\n      <NextArrow\n        action={() => {\n          changeCard();\n          nextSong();\n        }}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./CardBody.css\";\n\ninterface CardBodyProps {\n  name: string;\n  artists: { name: string }[];\n  preview_url: string;\n  style?: { name?: string; artist?: string; audioBar?: string };\n}\nexport const CardBody = ({\n  name,\n  artists,\n  preview_url,\n  style\n}: CardBodyProps) => {\n  const renderArtists = (arr: { name: string }[]) => {\n    return arr.map((artist: { name: string }, index: number) => {\n      if (index === arr.length - 1) return artist.name;\n      return artist.name + \", \";\n    });\n  };\n\n  return (\n    <div className=\"card__heading-wrapper mt-2\">\n      <div\n        className={\n          style && style.name ? style.name : \"heading__primary m-2 text-center px-4\"\n        }\n      >\n        {name}\n      </div>\n      <div\n        className={\n          style && style.artist\n            ? style.artist\n            : \"heading__secondary mb-4 text-white text-center px-4\"\n        }\n      >\n        {renderArtists(artists)}\n      </div>\n      <video className=\"card__audio-bar\" controls>\n        <source src={`${preview_url}`} type=\"audio/mpeg\" />\n      </video>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  updateStorageData,\n  getStorageData\n} from \"../../utilities/localStorage\";\nimport { GET_TRACKS_QUERY } from \"../../graphqlQueries\";\nimport { QueryError } from \"../../components/queryError\";\nimport { Query } from \"react-apollo\";\nimport { SwipeCard } from \"./swipeCard\";\nimport { CardBody } from \"../../components/cardBody\";\nimport { Button } from \"../../components/button\";\nimport { Alert } from \"../../components/alert\";\nimport \"../../Shared.css\";\nimport \"./Dashboard.css\";\n\nconst Dashboard = (props: any) => {\n  const [currentIndex, updateIndex] = useState(0);\n  const [isSongSaved, setIsSongSaved] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const nextSong = () => {\n    updateIndex(currentIndex + 1);\n    const audioBar = document.querySelector(\n      \".card__audio-bar\"\n    ) as HTMLVideoElement;\n    if (audioBar) audioBar.load();\n  };\n\n  const previousSong = () => {\n    updateIndex(currentIndex - 1);\n    const audioBar = document.querySelector(\n      \".card__audio-bar\"\n    ) as HTMLVideoElement;\n    if (audioBar) audioBar.load();\n  };\n\n  const saveSong = (id: string) => {\n    const savedTracks = getStorageData(\"saved_tracks\");\n\n    if (savedTracks && savedTracks.includes(id)) {\n      setIsError(true);\n      setTimeout(function() {\n        setIsError(false);\n      }, 2000);\n      return;\n    }\n\n    const result = updateStorageData(\"saved_tracks\", id);\n\n    if (result) {\n      setIsSongSaved(true);\n      setTimeout(function() {\n        setIsSongSaved(false);\n      }, 2000);\n    }\n  };\n\n  const displayGenres = () => {\n    const genres = getStorageData(\"selected_genres\");\n\n    return genres.reduce(\n      (acc: string[], value: string, index: number, arr: string[]) => {\n        if (index === arr.length - 1) return acc.concat(value);\n        return acc.concat(`${value}, `);\n      },\n      \"\"\n    );\n  };\n\n  return (\n    <div className=\"d-flex justify-content-center align-items-center h-100\">\n      {isSongSaved ? (\n        <Alert message={\"Song was successfuly saved!\"} isSuccess={true} />\n      ) : null}\n      {isError ? (\n        <Alert message={\"You already saved this song!\"} isSuccess={false} />\n      ) : null}\n\n      {getStorageData(\"selected_genres\") ? (\n        <Query\n          query={GET_TRACKS_QUERY}\n          variables={{ selectedGenres: getStorageData(\"selected_genres\") }}\n        >\n          {(properties: any) => {\n            if (properties.loading) return <h4>LOADING...</h4>;\n            if (properties.error) {\n              const error = properties.error.graphQLErrors[0].message;\n\n              console.log(\"ER\", error);\n              return (\n                <QueryError\n                  pushHistory={props.history.push}\n                  errorMessage={error}\n                />\n              );\n            } else {\n              return (\n                <div className=\"content-wrapper d-flex flex-column align-items-center\">\n                  <div className=\"heading__secondary mb-3 text-primary\">\n                    <span className=\"text-white\">Current Genres:</span>{\" \"}\n                    {displayGenres()}\n                  </div>\n                  <SwipeCard\n                    nextSong={() => nextSong()}\n                    previousSong={() => previousSong()}\n                    image={\n                      properties.data.suggestedTracks[currentIndex].album.images\n                        .url\n                    }\n                  />\n\n                  <CardBody\n                    artists={\n                      properties.data.suggestedTracks[currentIndex].artists\n                    }\n                    name={properties.data.suggestedTracks[currentIndex].name}\n                    preview_url={\n                      properties.data.suggestedTracks[currentIndex].preview_url\n                    }\n                  />\n                  <Button\n                    type={\"primary\"}\n                    title={\"Add to playlist\"}\n                    action={() =>\n                      saveSong(properties.data.suggestedTracks[currentIndex].id)\n                    }\n                    colors={\"bg-primary text-white\"}\n                  />\n                </div>\n              );\n            }\n          }}\n        </Query>\n      ) : (\n        props.history.push({\n          pathname: \"/\",\n          state: { genresError: true }\n        })\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport \"./Card.css\";\n\ninterface CardProps {\n  image: string;\n}\n\nexport const Card = ({ image }: CardProps) => {\n  return (\n    <div className=\"swipe-card d-flex align-items-center\">\n      <div className=\"card__image-wrapper mx-4\">\n        <img\n          className=\"swipe-card__image swipe-card__image-front\"\n          src={image}\n          alt=\"album cover\"\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport \"./Modal.css\";\n\ninterface ModalProps {\n  show: boolean;\n}\nexport const Modal: FunctionComponent<ModalProps> = ({ children, show }) => {\n  return (\n    <div\n      className={`custom-modal d-flex justify-content-center align-items-center ${!show &&\n        \"hide-modal\"}`}\n    >\n      <div className=\"custom-modal__form bg-white d-flex justify-content-center align-items-center flex-column p-3\">\n        {children}\n      </div>\n    </div>\n  );\n};\n","import React, { Fragment } from \"react\";\nimport { Button } from \"../../components/button\";\n\ninterface PlaylistModalProps {\n  name: string;\n  changeModalState: () => void;\n  addToPlaylist: () => void;\n}\n\nexport const PlaylistModalBody = ({\n  name,\n  changeModalState,\n  addToPlaylist\n}: PlaylistModalProps) => {\n  return (\n    <Fragment>\n      <div className=\"heading__primary-small bg-white text-center m-3\">\n        Confirmation\n      </div>\n      <div className=\"heading__secondary-small bg-white text-center bg-white\">\n        Are you sure you want to add these songs to \"{name}\"?\n      </div>\n      <div className=\"d-flex bg-white\">\n        <Button\n          type={\"primary\"}\n          title={\"Cancel\"}\n          action={() => {\n            changeModalState();\n          }}\n          colors={\"bg-primary text-white\"}\n        />\n        <Button\n          type={\"primary\"}\n          title={\"Add it\"}\n          action={() => {\n            addToPlaylist();\n            changeModalState();\n          }}\n          colors={\"bg-green text-white\"}\n        />\n      </div>\n    </Fragment>\n  );\n};\n","import React, { useEffect, useState, memo } from \"react\";\nimport {\n  SAVED_TRACKS_QUERY,\n  USER_PLAYLISTS_QUERY,\n  USER_DETAILS_QUERY,\n  ADD_TO_PLAYLIST_QUERY\n} from \"../../graphqlQueries\";\nimport { Button } from \"../../components/button\";\nimport { client } from \"../../App\";\nimport { Card } from \"./card\";\nimport { Modal } from \"../../components/modal\";\nimport { PlaylistModalBody } from \"./savedModalBody\";\nimport { CardBody } from \"../../components/cardBody\";\nimport { Alert } from \"../../components/alert\";\nimport { Query } from \"react-apollo\";\nimport { getStorageData, setStorageData } from \"../../utilities/localStorage\";\nimport \"./SavedSongs.css\";\nimport \"../../Shared.css\";\nimport { QueryError } from \"../../components/queryError\";\n\nconst SavedSongs = memo((props: any) => {\n  const [username, setUsername] = useState(\"\");\n  const [currentPlaylist, setCurrentPlaylist] = useState({ id: \"\", name: \"\" });\n  const [userPlaylists, setUserPlaylists] = useState([]);\n  const [songIds, setSongIds] = useState([]);\n  const [savedSongs, setSavedSongs] = useState([]);\n  const [modalState, setModalState] = useState(false);\n  const [isSavedPlaylist, setIsSavedPlaylist] = useState(\"\");\n\n  useEffect(() => {\n    const ids = getStorageData(\"saved_tracks\");\n    setSongIds(ids);\n    userQuery(playlistQuery);\n  }, []);\n\n  const userQuery = (fn: (args: any) => void) => {\n    client\n      .query({\n        query: USER_DETAILS_QUERY\n      })\n      .then(({ data: { userDetails: { display_name } } }) => {\n        fn(display_name);\n        setUsername(display_name);\n      })\n      .catch(err =>\n        props.history.push({\n          pathname: \"/\",\n          state: { authError: true }\n        })\n      );\n  };\n\n  const playlistQuery = (username: string) => {\n    client\n      .query({\n        query: USER_PLAYLISTS_QUERY,\n        variables: { username }\n      })\n      .then(result => {\n        setCurrentPlaylist(result.data.userPlaylists[0]);\n        setUserPlaylists(result.data.userPlaylists);\n      })\n      .catch(err => console.log(\"ERROR\", err));\n  };\n\n  const addToPlaylistQuery = () => {\n    if (currentPlaylist.id)\n      client\n        .query({\n          query: ADD_TO_PLAYLIST_QUERY,\n          variables: {\n            songIds: getStorageData(\"saved_tracks\"),\n            playlist_id: currentPlaylist.id\n          }\n        })\n        .then(result => {\n          setIsSavedPlaylist(result.data.addToPlaylist.snapshot_id);\n          setTimeout(function() {\n            setIsSavedPlaylist(\"\");\n          }, 2000);\n        })\n        .catch(err => console.log(\"ERROR\", err));\n  };\n\n  const removeSong = (trackId: string) => {\n    const newSongTracks = savedSongs.filter(\n      (item: {\n        id: string;\n        album: { images: { url: string } };\n        artists: { name: string }[];\n        preview_url: string;\n        name: string;\n      }) => item.id !== trackId\n    );\n    const newSongIds = songIds.filter((item: string) => item !== trackId);\n    setSongIds(newSongIds);\n    setSavedSongs(newSongTracks);\n    setStorageData(\"saved_tracks\", newSongIds);\n  };\n\n  const handleSelectChange = (value: { name: string; id: string }) => {\n    setCurrentPlaylist(value);\n  };\n\n  const renderSongs = (\n    songs: {\n      id: string;\n      album: { images: { url: string } };\n      artists: { name: string }[];\n      preview_url: string;\n      name: string;\n    }[]\n  ) => {\n    return songs.map(\n      (\n        song: {\n          id: string;\n          album: { images: { url: string } };\n          artists: { name: string }[];\n          preview_url: string;\n          name: string;\n        },\n        index: number\n      ) => (\n        <div\n          key={song.id}\n          className=\"d-flex justify-content-center align-items-center mb-5 flex-column col-12 col-md-6 col-lg-4\"\n        >\n          <Card key={index} image={song.album.images.url} />\n          <CardBody\n            artists={song.artists}\n            preview_url={song.preview_url}\n            name={song.name}\n            style={{\n              name: \"heading__primary-small mb-2 mt-2 text-center\",\n              artist: \"heading__secondary-small mb-3 text-center text-white\"\n            }}\n          />\n          <div\n            className=\"heading__secondary-small mt-2 text-primary\"\n            style={{ cursor: \"pointer\" }}\n            onClick={() => removeSong(song.id)}\n          >\n            Remove this song\n          </div>\n        </div>\n      )\n    );\n  };\n\n  const getPlaylistId = (name: string): string => {\n    const playlist: { name: string; id: string }[] = userPlaylists.filter(\n      (item: { name: string; id: string }) => item.name === name\n    );\n    return playlist[0].id;\n  };\n\n  const renderPlaylists = (arr: { name: string; id: string }[]) =>\n    arr.map((item, index) => <option key={index}>{item.name}</option>);\n\n  const changeModalState = () => {\n    return setModalState(!modalState);\n  };\n\n  const renderNoTracksMessage = () => (\n    <div className=\"heading__primary content-wrapper d-flex justify-content-center text-center px-4\">\n      You haven't saved any tracks yet.\n    </div>\n  );\n\n  return songIds ? (\n    <Query query={SAVED_TRACKS_QUERY} variables={{ savedTracks: songIds }}>\n      {(properties: any) => {\n        if (properties.loading) return <div>Loading...</div>;\n        if (properties.error) {\n          const error = properties.error.graphQLErrors[0].message;\n          return (\n            <QueryError pushHistory={props.history.push} errorMessage={error} />\n          );\n        } else {\n          if (!savedSongs.length && !getStorageData(\"saved_tracks\").length)\n            return renderNoTracksMessage();\n\n          !savedSongs.length && setSavedSongs(properties.data.savedTracks);\n\n          return username && currentPlaylist ? (\n            <div className=\"content-wrapper\">\n              {isSavedPlaylist ? (\n                <Alert\n                  message={\n                    \"Selected songs were successfully added to your playlist\"\n                  }\n                  isSuccess={true}\n                />\n              ) : null}\n              <Modal show={modalState}>\n                <PlaylistModalBody\n                  name={currentPlaylist.name}\n                  changeModalState={() => changeModalState()}\n                  addToPlaylist={() => addToPlaylistQuery()}\n                />\n              </Modal>\n              <div className=\"d-flex justify-content-center align-items-center mb-3 flex-column\">\n                <div className=\"heading__primary mb-3\">\n                  Choose your playlist\n                </div>\n                <select\n                  className=\"select-input\"\n                  onChange={e =>\n                    handleSelectChange({\n                      name: e.target.value,\n                      id: getPlaylistId(e.target.value)\n                    })\n                  }\n                >\n                  {renderPlaylists(userPlaylists)}\n                </select>\n                <Button\n                  type={\"primary\"}\n                  title={`Add these songs to \"${currentPlaylist.name}\"`}\n                  action={() => {\n                    changeModalState();\n                  }}\n                  colors={\"bg-primary text-white\"}\n                />\n              </div>\n              <div className=\"row\">{renderSongs(savedSongs)}</div>\n            </div>\n          ) : (\n            <div>Please login</div>\n          );\n        }\n      }}\n    </Query>\n  ) : (\n    renderNoTracksMessage()\n  );\n});\n\nexport default SavedSongs;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { ApolloClient } from \"apollo-client\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { setContext } from \"apollo-link-context\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport Header from \"./components/header\";\nimport Quiz from \"./pages/quiz\";\nimport Explore from \"./pages/explore\";\nimport SavedSongs from \"./pages/savedSongs\";\nimport { getStorageData } from \"./utilities/localStorage\";\nimport \"./App.css\";\n\nconst httpLink = createHttpLink({\n  uri: \"http://localhost:5000/graphql\"\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = getStorageData(\"token\");\n  return {\n    headers: {\n      ...headers,\n      token\n    }\n  };\n});\n\nexport const client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nconst App = () => {\n  return (\n    <ApolloProvider client={client}>\n      <BrowserRouter>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={Quiz} />\n          <Route path=\"/explore\" component={Explore} />\n          <Route path=\"/saved\" component={SavedSongs} />\n          <Route path=\"/*\" component={Quiz} />\n        </Switch>\n      </BrowserRouter>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}